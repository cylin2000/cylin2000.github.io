<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Javascript 对象继承]]></title>
    <url>%2F2018%2F04%2F28%2Fjavascript-inherit%2F</url>
    <content type="text"><![CDATA[Javascript 没有直接的对象继承，可以通过原型继承的方式来实现，下面是一种实现方法。17 定义父类将方法写到原型（prototype)上12345678function Person(name, age) &#123; this.name = name; this.age = age;&#125;;Person.prototype.greeting = function() &#123; console.log('Hi! I\'m ' + this.name + '.');&#125;; 定义子类12345678910111213141516171819function Teacher(name, age, title) &#123; //初始化父类的属性 Person.call(this, name, age); //Person.apply(this,[name,age]); //初始化子类的属性 this.title = title&#125;//继承父类的方法Teacher.prototype = Object.create(Person.prototype);//将构造器指回Teacher，一般情况下可省略，详见 https://stackoverflow.com/questions/8453887/why-is-it-necessary-to-set-the-prototype-constructorTeacher.prototype.constructor = Teacher;//设置子类的方法Teacher.prototype.sayHello = function()&#123; console.log('Hi! I\'m ' + this.name + '. My title is '+this.title);&#125; 实例化12345var teacher1 = new Teacher('Allen',35,'title1')teacher1.sayHello();var teacher2 = new Teacher('Bob',35,'title1')teacher1.greeting();]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个简便的Excel导出方案]]></title>
    <url>%2F2018%2F04%2F15%2Fexport-excel%2F</url>
    <content type="text"><![CDATA[导出Excel是开发中遇到的一个常见需求，但是不同的后端服务程序可能需要引入不同的类库，比如PHP需要PHPExcel，C#需要Office组件或者其他第三方Excel解析类。 这里提供另外一个思路，可以不需要引入第三方类库来解决Excel的导出问题。 数据展示导出Excel文件之前，一般我们会展示数据，通常是使用表格,示例如下： 姓名 手机 性别 年龄 邮箱 张三 13344445555 男 25 zhangsan@163.com 李四 13366665555 男 26 lisi@163.com 这种表格一般都是使用 table 标签生成，其实Excel本身也是可以解析这种标签格式的，所以我们将如下表格对应的HTML代码保存到本地文件，并且将扩展名改成 xls，然后用Excel打开即可正常解析。 123456789101112131415161718192021222324252627&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th width="20%"&gt;姓名&lt;/th&gt; &lt;th width="20%"&gt;手机&lt;/th&gt; &lt;th width="20%"&gt;性别&lt;/th&gt; &lt;th width="20%"&gt;年龄&lt;/th&gt; &lt;th width="20%"&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;13344445555&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;25&lt;/td&gt; &lt;td&gt;zhangsan@163.com&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;13366665555&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;26&lt;/td&gt; &lt;td&gt;lisi@163.com&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 封装导出功能既然Excel有解析HTML table的功能，我们就可以把数据直接导出html格式，下面用php代码示例一下导出步骤 在导出的处理程序里设置对应excel的header这样用户访问到这个页面是，会弹出XLS的文件下载框，其中ExportAll为文件名,可以替换成自己需要的文件名 123header('pragma:public');header('Content-type:application/vnd.ms-excel;charset=utf-8;name="ExportAll.xls"');header("Content-Disposition:attachment;filename=ExportAll.xls"); 页面模板输出如下格式123456789101112131415161718192021&lt;html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th width="20%"&gt;姓名&lt;/th&gt; &lt;th width="20%"&gt;手机&lt;/th&gt; &lt;th width="20%"&gt;性别&lt;/th&gt; &lt;th width="20%"&gt;年龄&lt;/th&gt; &lt;th width="20%"&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;!--表格数据--&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 小结本文的思路是利用Excel本身强大的兼容解析功能,将解析放在Excel客户端，而不是在服务器生成复杂的xls格式的数据。 对简单的Excel导出需求，这样可以简化开发，加快开发的进度。]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建本地的Jenkins持续集成系统]]></title>
    <url>%2F2017%2F12%2F03%2Finstall-jenkins%2F</url>
    <content type="text"><![CDATA[搭建本地Jenkins持续集成系统这篇文章简要介绍如何在本地搭建一套Jenkins持续集成系统。 基本实现是这样的 在虚拟机中安装一套Ubuntu系统 在Ubuntu中，安装Jenkins 和 Docker 在Jenkins中配置Job，从GitHub获取代码，并且自动Docker实例，运行测试，编译和部署，之后销毁Docker实例 基础环境该系统选择的基础环境是 Ubuntu 操作系统，所以务必先准备好Ubuntu，推荐版本是16.04，这个不是最新的版本，但是是长期支持的稳定版本。 本地虚拟机可以到官网下载 Ubuntu 16.04 Server 版本镜像。 http://releases.ubuntu.com/16.04/ubuntu-16.04.6-server-amd64.iso 注意：安装Ubuntu的时候，请选择安装组件 LAMP 和 SSH Server 安装 JenkinsUbuntu准备好了后，我们就可以直接登录系统，开始安装Jenkins了参考官方WIKI：https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Ubuntu 执行下面脚本1234567# 添加Jenkins的Global Key到APT中wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add - # 更新APT库，安装Jenkinssudo sh -c &apos;echo deb http://pkg.jenkins-ci.org/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list&apos; sudo apt-get update sudo apt-get install jenkins 启动 Jenkins123456789sudo service jenkins start # 停止sudo service jenkins stop# 相关路径访问路径：http://localhost:8080 安装路径：/var/lib/jenkins 日志路径：/var/log/jenkins 配置 Jenkins 在浏览器访问Jenkins地址，注意使用正确的ip地址，可以使用ifconfig查出地址， 如 http://192.168.0.101:8080 在登录页面会需要你输入admin的password，使用下面命令获的密码，输入密码 1cat /var/jenkins_home/secrets/initialAdminPassword 点击继续，在选择插件界面，选择 Install suggested Plugins 插件安装完毕之后，配置登录的管理员 用户名和密码 配置完成 安装 Docker我们期望 Jenins 的Deployment Pipeline 运行在Docker里面，所以需要安装一下 Docker 12345678910111213141516171819202122232425# 清理旧版 dockersudo apt-get remove docker docker-engine docker.io# 更新 APT-GET 库准备安装 一些前置软件sudo apt-get update# 安装HTTPS传输,CURL等软件sudo apt-get install apt-transport-https ca-certificates curl software-properties-common# 添加 Docker’s official GPG key:curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -sudo apt-key fingerprint 0EBFCD88# Set Docker 安装库sudo add-apt-repository \ &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) \ stable&quot;# 安装Dockersudo apt-get updatesudo apt-get install docker-ce 运行 Docker1234567sudo docker run hello-worldsudo docker build -f dockerfile-receiversudo docker run -p 9080:80 nginxsudo docker run -it 9080:80 nginx 设置 Jenkins 运行 Docker的权限123456789101112131415# 如果还没有 docker group 就添加一个：sudo groupadd docker# 将当前用户和jenkins用户加入该 group 内。然后退出并重新登录就生效啦。sudo gpasswd -a $&#123;USER&#125; dockersudo gpasswd -a jenkins docker# 重启 docker 服务sudo service docker restart# 切换当前会话到新 groupnewgrp docker# 重启 jenkins 服务sudo service jenkins restart 至此 Jenkins 环境就搭建好了 配置 Jenkins Pipeline下面尝试配置一个Jenkins的Pipeline，测试一下部署流程，基本模拟步骤如下： 创建一个Jenkins Pipeline Pipeline中使用远程代码库中的Jenkinsfile在指定部署内容 编写提交Jenkinsfile 准备代码库 去GitHub上面创建一个测试代码库，如jenkins-test,可以参考 https://github.com/cylin2000/jenkins-test 代码库里面创建 Jenkinsfile 文件，内容是json格式的定义，如下:123456789101112131415pipeline &#123; agent &#123; docker &#123; image &apos;node:6.3&apos; args &apos;-v $HOME/.n63:/root/.n63 -u root:root&apos; &#125; &#125; stages &#123; stage(&apos;Example Build&apos;) &#123; steps &#123; sh &apos;npm --version&apos; &#125; &#125; &#125;&#125; 这个Job很简单，定义了使用docker的node 6.3版本的image 作为 build 的容器，build开始的时候，执行 npm –version 就可以显示npm的版本，注意运行Jenkins的主机不需要安装nodejs的 注意 args 中的 -u root:root 一定要有，否则会出现 steps 里面的命令，如 npm install 之类的命令没有权限运行 代码提交之后，就回到Jenkins界面，选择”New Item”，填入名称 如 “HelloPipeline” 选择 “Pipeline”，点击”OK” 在Pipeline配置界面里，”Definition”选择”Pipeline script from SCM”,”SCM”选择 “Git”, 然后填入你的Repository地址，最后点击下面的 “Save” 按钮]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信使用JSSDK分享OAuth链接的问题]]></title>
    <url>%2F2017%2F06%2F28%2Fwechat-shareappmessage-bug%2F</url>
    <content type="text"><![CDATA[使用微信的JSSDK，可以在转发图文给朋友或者转发到朋友圈的时候，对转发的标题，描述以及图片进行自定义，这是个很好的功能，然而最近测试的时候发现一个Bug，当转发的链接是OAuth链接的时候，这段定义就失效了。 问题描述先简单说一下什么是OAuth链接，参考微信的说明文档 https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842 微信OAuth的链接格式是这样的 https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect 其中的 REDIRECT_URI 就是我们自己的网页链接，这段链接只能在微信里面访问，微信会得到通过用户授权得到用户的信息，然后跳转到 REDIRECT_URL 将用户信息传过来 关于JSSDK的分享自定义，微信的说明文档在此处 https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115 123456789101112131415获取“分享给朋友”按钮点击状态及自定义分享内容接口wx.onMenuShareAppMessage(&#123; title: '', // 分享标题 desc: '', // 分享描述 link: '', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致 imgUrl: '', // 分享图标 type: '', // 分享类型,music、video或link，不填默认为link dataUrl: '', // 如果type是music或video，则要提供数据链接，默认为空 success: function () &#123; // 用户确认分享后执行的回调函数 &#125;, cancel: function () &#123; // 用户取消分享后执行的回调函数 &#125;&#125;); 上面的代码中，注意link的描述，”该链接域名或路径必须与当前页面对应的公众号JS安全域名一致”，就是说你转发的链接必须与你公众号的JS安全域名一致，因为安全问题，这个设置无可厚非。 你不能自己的图文在 http://www.mydomain.com 而分享其他链接如 http://www.baidu.com， 当你这么设置的时候，这段分享自定义的脚本就全部失效。 现在问题来了，如果我想使用微信自己的OAuth链接进行分享的话，也会失效，虽然是他自家的域名，微信同样认为这个链接和JS安全域名不一致，而如果直接分享 http://www.mydomain.com/xxx 的链接时，是无法从微信里得知用户信息的。 JS安全域名是可以在公众号管理后台设置的，但是无法把open.weixin.qq.com或者qq.com设置为JS安全域名的。 看起来似乎是无解了 解决方法经过思考，归纳一下问题就是在于两点 JSSDK只能转发同域名下的链接 http://www.mydomain.com 必须使用 https://open.weixin.qq.com 开头的OAuth链接才能识别微信用户的身份 解决方法其实很简单，把OAuth的链接编码，并且传给自己的代码，使用后台跳转如1234$oauth_url = &quot;https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect&quot;;$encoded_url = base64_encode($oauth_url);$new_url = &quot;http://www.mydomain.com/jump?url=&quot;+encoded_url;此处 $new_url 代替之前的转发url，他的域名是符合JSSDK安全域名定义的 Jump里的处理规则就是解码以及后台跳转，伪代码如下123$encoded_url = request[&apos;url&apos;];$url = base64_decode($encoded_url);header(&quot;location: &quot;.$url); 这个问题困扰了我好久，还好终于解决了 2019-02-27 补充这个问题不是微信的bug，其实转发的时候可以直接转发自己域名下的地址，比如 http://www.mydomain.com/share/news/123 然后，在这个具体的页面里面，如果需要OAuth，进行二次跳转，而不是必须一开始就拼接OAuth的地址，这个问题是开始钻了牛角尖了。。。]]></content>
      <categories>
        <category>疑难杂症</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[《软技能》读书笔记]]></title>
    <url>%2F2017%2F06%2F11%2Freading-soft-skills%2F</url>
    <content type="text"><![CDATA[网上经常有程序员情商低的段子，从一个侧面也说明了程序员对代码的给予了很高的关注度，但是忽略了很多其他方面。《软技能》正是一本从另一个角度写给程序员的书，从本书的副标题“代码之外的生存指南”也可以看出，作者对程序员的容易忽视的软肋进行整理以及提出给出解决方案。 本书涉及很多方面，分为职业篇、自我营销篇、学习篇、生产力篇、理财篇、健身篇、精神篇等七篇，我个人觉得前4篇值得更多关注，后面3篇可以参考其他更多专门论述的书。 职业篇 大多数软件开发人员从职业生涯一开始就犯了几个严重的错误。截至目前，最大的错误就是没有把自己的软件开发事业当作一桩生意来看待。不要被愚弄了，当你为了谋生一头扎进写代码的世界时，其实你和中世纪小镇上开铁匠铺的铁匠没什么差别。确实，时代或许已经改变了，我们中大多数人现在为公司工作，但是我们的技能和生意都还是自己的，我们随时都能换个地方另起炉灶。这种心态对于管理职业规划至关重要。因为只有你开始把自己当作一个企业去思考时，你才能开始做出良好的商业决策。但是，如果你已经习惯于领取一份固定的薪酬（注意，你的工资还真不是取决于你的表现），这会很容易导致你产生另一个心态——你只是在为某家公司打工。尽管在你的职业生涯的某个特定时间段里，你可能确实是在为某家公司打工，但是千万不要让那个特定的角色固化了你和你的整个职业生涯——这一点非常重要！ 这是一个思路转换的问题，是主动的心态或者是被动的心态，很多书籍会提到这一点，我相信认识到这一点的人行为方式会发生变化，越早认识到这一点对自己越有利。 想象一下这样的场景：你走进面试房间，与面试官握手致意。当他看你的时候，脸上露出了似曾相识的表情：“嘿，我认识你。我在你博客上看过你的照片。我读过你博客上的好多文章呢。” 对普通人，面试官恰好读过你博客的概率太低，不过我们大可以将自己的博客地址放到简历上，有兴趣的面试官自然会在面试之前浏览你的博客，这样就会对你的关注点，文章水平，代码水品会有更进一步的了解。 自我营销篇 在软件开发行业，营销的名声并不好。一般人提起营销人员都会皱眉头，因为很多营销人员会急功近利地使用不诚信的手段。似乎每天都有无良的营销人员为了一己私利而兜售新骗局。 当前，营销的概念的确被某些人玩坏了，甚至成了一个贬义词。但其实这是一个正常的商业活动，开发人员不应有偏见，更不能以此拒绝正常的营销。 自我营销要从打造能代表你自己的个人品牌做起。你不可能将所有的东西全部呈现出来，因此，对于自己成为怎样的人、给世界呈现怎样的形象，你要谨慎决定。如果你也想在有人多次接触你或者你的产品时营造出一种亲切感，个人品牌能帮到你。 作为一名软件开发人员，可以用来推销自己的最佳媒介之一就是博客。 再次提到博客的重要性，第21章 “创建大获成功的博客”，值得反复翻阅 营销博客的几个方法： 要有自己的域名，免费博客的域名一般是二级的，搜索引擎给的权重是不一样的 持之以恒，保持规律输出，一般最好一周至少要有一篇 去知名博客类似主题发表自己的看法，并附上链接，不可发只有自己博客链接的垃圾评论 最重要的，要写有价值的内容，而不是堆砌 大牛的博客 https://johnpapa.net/ https://blog.codinghorror.com/ Stack Overflow 创始人之一 http://www.hanselman.com/ https://www.smartpassiveincome.com/ “无处不在”策略 如果你能帮助足够多的人们得到他们想要的东西，你就会得到自己想要的东西。 学习篇 第1步：了解全局，第2步：确定范围，第3步：定义目标，第4步：寻找资源，第5步：创建学习计划，第6步：筛选资源 这些步骤做一遍第7步：开始学习，浅尝辄止，第8步：动手操作，边玩边学，第9步：全面掌握，学以致用，第10步：乐为人师，融汇贯通 十步学习法，也可以参考《如何阅读一本书》的主题阅读，有相通的概念 生产力篇 一切始于专注专注的实践方法：番茄工作法定额工作法，规定每天完成多少个番茄 后续3篇理财篇 可以参考《富爸爸穷爸爸》《小狗钱钱》等书籍健身篇 可以参考《当我谈跑步时，我谈些什么》精神篇 可参考哈佛《幸福课》公开课，《高效能人士的七个习惯》等 后记这本书写的比较宽泛，章节很多很简洁，就像一篇一篇的博客，所以也适合平时遇到类似思考时拿出来参考。其中关于创建博客，学习方法，提升生产力等部分则有很强的操作性，可以直接拿来实践是否适合自己。]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>reading</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用前端类库整理]]></title>
    <url>%2F2017%2F06%2F05%2Fuseful-frontend-library%2F</url>
    <content type="text"><![CDATA[做前端开发免不了要使用一些静态公共库，如果代码部署在互联网上面，我们可以使用CDN，如： 新浪的CDN http://lib.sinaapp.com/ 百度的CDN http://cdn.code.baidu.com/ 但是如果我们需要部署在内网，或者需要使用一些不太常见的类库，那么这个时候公共CDN也就不好办了 这里提供一个思路，我们可以创建一个自己的静态公共库方便重复使用 约定 以下假设文件部署到 http://www.caiyunlin.com/public 路径下 所有文件存放在public文件夹之下，这样在本地的话，类库的根路径就是 http://www.caiyunlin.com/public, 开发代码中对类库有引用则从路径 /public 开始引用即可 和公共CDN命名方式一样，类库以名称和版本分级目录存在，如：jQuery类库3.2.1版本使用下面链接, http://www.caiyunlin.com/public/jquery/3.2.1/jquery.min.js, 这样有多个版本时不会冲突 引用类库中可以包含相关的demo文件，这样可以方便参考和查错，如： http://www.caiyunlin.com/public/fullcalendar/3.2.0/demos/agenda-views.html 类库文件只会按规则增加，不会删除和修改，这样方便旧版正在运行的项目 几个优点 方便重用，同一个网站部署，只需要部署一次public文件夹，部署方式也仅仅是复制一下，各个子应用就可以直接使用，且子应用的文件夹只包含自己的内容 移植方便，当需要部署到不同的服务器，或者线上环境，只需要拷贝public文件夹，不需要的内容直接从public中删除即可 临时性的项目可以直接引用在线路径，不用部署public代码]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[常用软件整理]]></title>
    <url>%2F2017%2F06%2F05%2Fuseful-softwares%2F</url>
    <content type="text"><![CDATA[每次新安装一个环境的时候，免不了要把一些常用软件安装一遍，这时候需要去各个网站一个一个的下载软件，而且下载的过程中经常受到网络影响，某些国外的软件还有墙的问题。时间都耗费在这些事情上，实在是无聊，遂抽空整理一些常用软件，以便下次使用 命名为方便管理，软件统一成固定的格式的压缩包softwarename-1.0.zip，如flashfxp-3.6.0.zip，就是FlashFxp的3.6.0版本下载地址为 ： http://public.caiyunlin.com/flashfxp-3.6.0.zip 下载清单如果直接下载，访问清单链接即可：http://www.caiyunlin.com/public/softwares 自动安装自动安装使用PowerShell命令行的方式，只需要使用两行代码即可安装需要的软件12iex (new-object net.webclient).downloadstring(&apos;http://www.caiyunlin.com/dev/powertask&apos;)install FlashFxp 具体使用说明 打开PowerShell命令行 复制 iex (new-object net.webclient).downloadstring(‘http://www.caiyunlin.com/dev/powertask&#39;) 到PowerShell命令行执行 如果遇到错误，可能是执行脚本权限问题，可以先执行 Set-ExecutionPolicy bypass再执行上一步 切换到需要安装的目录，如c:\softwares，执行需要安装的软件 如： install FlashFxp 也可以直接指定安装目录 如：install FlashFxp c:\softwares\FlashFxp 注意：软件的安装只是简单的解压缩，如果是绿色软件，可以直接使用，如果是需要进一步安装的，需要打开目录，执行安装文件 注意：下载的zip文件在安装后会自动删除，如需要可自行压缩，或者使用 get xxx 直接下载一份，如 get flashfxp 目前可以支持的软件，会在使用过程中慢慢更行此列表，直接执行 install 可以显示可用的软件清单12345678910install FlashFxpinstall 7Zipinstall Gitinstall MongoDBinstall MultiDeskinstall NCFtpinstall phpinstall Puttyinstall SublimeTextinstall Svn 实现思路 申请一个存放软件的空间，我使用的是七牛云，免费的可以支持10G 整理软件包资源，上传到空间里 使用PowerShell实现下载文件Get-WebFile，解压缩Expand-Zip等功能，并且提交到github上，获得可在线访问的地址 封装PowerShell脚本到Module，使用动态加载脚本的方式载入在线脚本，具体实现可参考 https://github.com/cylin2000/powertask 执行脚本下载和安装软件 这件事情没有用到啥复杂的技术，但是的确可以省下不少时间]]></content>
  </entry>
  <entry>
    <title><![CDATA[找到你自己的罗盘，《要事第一》读书笔记]]></title>
    <url>%2F2017%2F02%2F08%2Freading-put-first-things-first%2F</url>
    <content type="text"><![CDATA[这本书是《高效能人士的七个习惯》中第三个习惯“要事第一”的详解，是一种新式的时间管理方法。如果你对时间管理有困惑，尝试了数种时间管理方法和时间管理软件，依然不奏效，建议读一读此书。 我的痛楚我相信很多寻求时间管理方案的人，可能是因为下面的痛楚： 事情太多，太杂，每天都忙不完，最后却又不知道忙了些什么 不怎么忙，但自己有很多想做的事情却迟迟开始不了，拖延症严重 这两个痛楚，我是都经历过的，因为从事的是软件开发工作，在项目紧急赶上线时间的时候，我经常被第一个痛楚困扰，当排查出很多低级错误的时候，更是狠下决心有时间一定要好好读一下软件相关的经典书籍，防止再踩坑。然而项目上线后，休息几天就会进入了第二个痛楚，当初的痛点不那么痛了，开始懒散，拖延，待办事项里不能打钩的顽固任务，成了打击自己的工具，进而更加自责。 比如，《代码大全》 是我一直想读的一本书，豆瓣评分9.3，想来是一本好书，作为以软件开发人员，应该读一读，但我至今第一章都没有读完。 我在反思，为什么这本《代码大全》我一直读不下去？要事第一，这四个字不难理解，对于软件开发者来说，读这本讲软件构建和实战技巧的书无疑是一本重要的事，我知道这个道理，为什么还是没能读下去？ 我读了时间管理的书《搞定I》，《番茄工作法图解》，《吃掉那只青蛙》等，使用了Todolist,Wunderlist,谷歌日历还有GTD相关软件，安排自己的待办事项，然而还是不怎么奏效。 时钟和罗盘本书第一部分点出了区别： 时钟代表我们的许诺、约会、进度表、目标、行为——即花费时间所做的事情以及如何来管理时间。罗盘代表我们的构想、价值观、原则、使命、良知、方向——我们认为重要的事情以及如何生活。 这是个很好的比喻，时钟表示怎么去做，罗盘表示为什么去做。我突然发现，我之前寻找的方案都集中在时间的层面，却没有好好想过为什么要去做，比如《代码大全》，我为什么去要去读？ 因为我从事软件行业？ 因为很多人都推荐，很多大牛都读过？ 因为我定了计划，一年要读多少书？ 因为我要跟别人吹嘘，我读过这本大部头？这些理由都不足以支撑我来干这个事情，而且还会想 这个通用的书对我现在的项目，帮助有多大？ 读完没有应用最终会忘掉，那还读了干嘛？由此种种，最终导致我迟迟没有开始去做这个事情 罗盘是指引方向的，我们可以不知道这个比喻，但是我们的潜意识，在骨子里不想做的事情，是没有意愿没有动力去做的。之所以我们把这些事情还列在自己的待办清单里，只是因为我们拿着别人的罗盘，却以为是自己的罗盘了。 我知道了，当务之急，是找到自己的罗盘 三代时间管理方法作者调查了一百多部书籍、数百篇文章以及各种各样的日历、计划手册、软件和其他的时间管理工具，发现大多数人更认同所谓的三“代”时间管理方法。 第一代建立在“备忘录”的基础上。它“顺应潮流”，但又记录下你想做的事情——写报告、开会、修汽车、清理车库。这一代是以便笺和核对表为特征的。如果你属于这代，你会随身携带核对表，作为参考，以免忘事。希望一天下来，完成了打算做的很多事情，可以从表中将它们划掉。如果有未完成的任务，就将它们放在明天的表中。 第二代是“计划与准备”，以日历和约会登记簿为特征。这一代强调效率、个人责任感、确立目标，事先做计划，列出未来的活动和事情时间表。如果你属于这一代，你会安排约会、写下承诺、确定最后期限、记下开会地点。你还可能用电脑或网络等来做记录。 第三代的方法是“计划，排序，控制”。如果你属于这一代，你可能要花些时间明确自己的价值观和优先考虑的重点。你会问自己：“我想要什么？”为了实现这些价值观，你制订了长期、中期和短期目标，将自己每一天的活动都进行优先排序。这一代的特征是有各种各样的计划手册和时间管理手册——电子的或写在纸上的——对每天的计划都有详细列表。 我整理了一下，相关的软件可以体现在： 第一代：各种便签，Clear，提醒事项,Wunderlist 第二代：Google日历，Outlook 第三代：各种GTD软件，如：Omni Focus，Doit.im，滴答清单 现在我更加确定，之前花费了太多时间在前3代时间管理方法上，但是对于自己真正想要的却不是很清楚，所有总觉的有点不得章法。 三代时间管理方法的优缺点如下： 第四代时间管理方法：以角色为基础安排每周日程要解决这些问题，作者提出了第四代时间管理方法：以角色为基础安排每周日程全书的第二部分，都是在论述这种方法的优点，操作方法以及遇到阻力是应该怎么办 这里贴一张示例图，有个直观的概念 简单说下我能看到的优点： 角色法安排任务，防止失去生活的平衡，大家都不愿看到事业有成，但家庭支离破碎的结果。这个方法同样可以用作月度计划和年计划的参考。 一周计划，一周包含五天工作和两天休息，恰好是包含工作和生活的最小单元，以周安排事务，有全局观去平衡工作和家庭，也会减少以日为单位安排，但是没完成任务后去熬夜或者去沮丧的缺点。 每日调整，将之前的每日计划，改成每日根据需要去调整，能够很好的应变突发变化 不断更新，从身体，智力，精神，社会/感情 4个方面，根据评测表，让你每周可以回顾自己，找到自己真正的需要，并安排下周计划 我相信大家最终的目标应该都包含幸福的生活，按此方法，你会不断的提醒自己，更新自己： 你不会讨厌情人节，圣诞节，春节，生日，因为那是你作为配偶，儿子女儿，父母这类角色往对方的情感账号里存钱的好时机 你不会再安排诸如，每日早起，每日跑步，每日写作这样容易失败的计划 你不会再有安排了计划，却被突然打乱而满是恼怒，继而得罪别人或者放弃整盘计划的冲动 你不会再有一步一步执行完成计划，终了却发现这不是我想要的那种迷茫 我参考图片制作了一个Excel，可以接作为电子版或者打印到A4纸上使用。点此下载 后记本书的第三章：相互依赖的协作增效，和第四章：以原则为中心的力量与平和，建议参考《高效能人士的七个习惯》或者其他项目管理的相关书籍，对我来说，这本书提供“要事第一”的实际操作方法比较重要，其他的论述略简单不够全面。整体上，要做好“要事第一”，更重要的仍然是“个人宣言”部分，所以对《高效能人士的七个习惯》领悟的比较透彻的人可以略读或者不读此书，毕竟方法不是最重要的，最重要的还是思想，也就是本篇标题所讲的，找到你自己的罗盘，即“个人宣言”。 最后，我也不能保证这第四代时间管理方法就是非常有效的，但是我决定花一定的时间去尝试和总结！ 最后的最后，《代码大全》要读吗？对我来说，要的，但是是不同的原因了。]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>reading</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《代码大全》读书笔记]]></title>
    <url>%2F2017%2F02%2F08%2Freading-code-complete%2F</url>
    <content type="text"><![CDATA[有句话说，年少莫听李宗盛，是说有阅历的人听李宗盛的歌会特别容易共鸣，这本《代码大全》也是如此，如果你从事软件开发行业多年，并且自己也尝试过做设计，在设计、编码的过程中反复纠结过，那么不要错过此书。 这本书大而全，很适合做参考书，时常翻阅。 克服复杂性 管理复杂度是软件技术的首要使命 不想举例，很多软件开发出来，如何使用他要写一堆文档，搞一堆培训来教人们如何使用它，这种软件迟早要被淘汰的。 写代码的目的 首先为人编写代码，其次才是为机器编写代码，代码主要是供人阅读的 最开始写代码肯定是为了实现功能，等程序能跑起来，测试通过就算大功告成了，真正体会这句话，是在大量维护代码的时候，不管是自己的还是别人的代码。 举个我自己遇到的例子，有段XML配置文件是定义机器清单的，这很常见，如下 12345678&lt;servers&gt;&lt;server name=&apos;ReportingServer&apos; address=&apos;xenvcloud046.cloudapp.net&apos; &gt;&lt;server name=&apos;ReportingDatabaseServer&apos; address=&apos;xenvcloud044.cloudapp.net&apos; &gt;&lt;server name=&apos;ReceiveServer&apos; address=&apos;xenvclod023.cloudapp.net&apos; &gt;&lt;server name=&apos;ProcessingServer&apos; address=&apos;xenvcloud057.cloudapp.net&apos; &gt;&lt;server name=&apos;InternalProcessingServer&apos; address=&apos;xenvcloud078.cloudapp.net&apos; &gt;&lt;server name=&apos;SendServer&apos; address=&apos;xenvcloud090.cloudapp.net&apos; &gt;&lt;/servers&gt; 这段配置有个问题，你能发现吗？你肯定会很无语，这是个配置文件，就算有啥错误，也是要解析执行他的代码执行了才知道有没有问题啊。 但是如果格式化下面的样子呢？12345678&lt;servers&gt; &lt;server name = &apos;ReportingServer&apos; address = &apos;xenvcloud046.cloudapp.net&apos; &gt; &lt;server name = &apos;ReportingDatabaseServer&apos; address = &apos;xenvcloud044.cloudapp.net&apos; &gt; &lt;server name = &apos;ReceiveServer&apos; address = &apos;xenvclod023.cloudapp.net&apos; &gt; &lt;server name = &apos;ProcessingServer&apos; address = &apos;xenvcloud057.cloudapp.net&apos; &gt; &lt;server name = &apos;InternalProcessingServer&apos; address = &apos;xenvcloud078.cloudapp.net&apos; &gt; &lt;server name = &apos;SendServer&apos; address = &apos;xenvcloud090.cloudapp.net&apos; &gt;&lt;/servers&gt; 眼尖的你是不是发现第三行的server名不对齐了，是漏写了一个字母。事实上，这个错误当时也是用这个方法查出来的，因为production不能直接调试代码。 第一段代码是给机器读的，第二段代码是首先给人读的，这只是个小例子，如果坚持这个习惯，不但容易阅读，也容易提前发现一些错误。 对了，这个属性对齐，在Sublime Text 和 VS Code里都有一个叫Alignment的插件自动帮你完成，不用你自己手打那么多空格对齐:) 反复，再反复 软件设计是一个逐步精化的过程，和其他类似过程一样，需要经过反复修正和改进。 所以任何一次性设计好一个完美的框架涵盖到所有的需求的想法都是白搭的，因为不符合规律，这样也使很多设计迟迟不能落地。 关于命名和注释书中用了两个章节专门讲命名和注释，看完这些应该不会在参与任何网上关于命名的争吵了。]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>reading</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何制作可实现的年度计划]]></title>
    <url>%2F2017%2F01%2F01%2Fhow-to-set-yearly-plan%2F</url>
    <content type="text"><![CDATA[这是一篇听课笔记，是我听喜马拉雅《小强升职记：带你六步制作可实现的年度计划》的总结。 关于年度计划，网上有句经典语录叫：我2015年的目标就是搞定2014年那些原定于2013年完成的安排，不为别的，只为兑现我2012年时要完成的2011年年度计划的诺言 你是不是也是这样呢？那你想知道什么原因吗？ 第一课：年度计划总实现不了的原因是什么小强的经验总结，年度计划实现不了的原因有4个，假大空全 假：目标不是发自内心的比如说，有朋友见到你说，你最近脸变圆了，你很郁闷，所以你写下一个目标，新的一年，我要减重10斤。 这个目标好假，因为你根本没有因为那点体重而痛苦，也没有想让自己变成超模身材的热情。你真正的心态是，我虽然想让自己瘦一点，但另外一方面又没觉得有什么大不了，所以瘦身只是一时激情的假目标。 大：目标超出了能力范围比如说，你想每天走一万步，看上去挺简单，怎么超出能力范围了呢？请注意，超出能力范围的不是走一万步，而是每天 空：写下了目标，但是没有落地到每个月，每一天的计划当中比如说，你一年打算读50本书，往往前两个月，很积极，每个月都能读4,5本书，到中间就抛之脑后了，年底的时候突然想起来，突击完成任务，效果可想而知 全：想把所有写下的目标全部实现至刚则易脆，万一有一个没实现，就会失去对整个年度计划的信念。所以有的时候，我们不是没有能力完成计划，而是因为追求完美而没法完成。 如果你做过上一年的年度计划，建议你用假大空全的方法，标注出不靠谱的年度目标，看看是不是没有实现 附：小强2016年的年度计划的完成情况 全家日本自由行8天 橙子学院合作时间管理课程，卖了2000多份 读了60本书，写60篇读书笔记，完成比完美重要 一个人的英雄之旅，去了新疆 每周打篮球两次 学习了EBO式行动学习技术，提问为主 （未完成）做一本送给格格（小强女儿）的绘本，2016年写了13个故事，但是都不满意，且发现做绘本没有那么容易 （未完成）运行墨立方成长俱乐部，2010年成立的，周期性找嘉宾做分享（西安太多类似组织，所以停止了运营） 什么样的年度计划是好的年度计划呢？ 首先是可实现的 然后是你不会因为太多年度计划而感到焦虑，也不会因为年度计划没有全部完成而感到自责 如何制作一份自己的年度计划呢？ 参考制作年度计划的全景图 第二课：如何写出“走心”的年度计划一般你是怎么做年度计划的呢？是不是年底或者年初，找个空闲时间，往桌子前一做，拿一张纸，拿一支笔然后就拖着腮帮子在那想,我今年都要做些什么呢？噢对这个然后写下，还有那个，写下，然后分解，每个月做什么，每周做什么，每天做什么在拆解的过程中你会感觉非常爽，感觉这个目标已经实现了一样。如果你是这样做的可能遇到两个问题 目标经常变年度目标写的去丽江发呆，3月份可能就改成了去日本看樱花，说明写的时候并没认真年度除写了10个目标，慢慢变成15个了，慢慢这样下去，你就不会把年度目标当回事了，变成了一种可有可无的东西 3分钟热度比如说，每天用扇贝英语背单词50个，很明确具体可执行，但是坚持了15天，你就开始忘记背了，最后无疾而终了 为什么遇到这样的问题，因为你制定目标的时候，走脑而没有走心 你可能会问，走脑的目标是怎样，走心的目标又是怎样？ 举个例子，瘦身10斤这个目标，走脑还是走心呢？ 这个目标不能从字面判断是走脑还是走心的，而是看这个目标是从哪来的 有些人的瘦身目标是从需要来的，比如说体重有点太重了，别人说我有点太胖了，心里觉得挺膈应，需要瘦身，但其实你的内心觉得胖点也无所谓 另外一些人的瘦身目标是从不得不要来的，比如说突然发现好多衣服穿不上，早晨出来一照镜子，觉得不好，但是你也可能会觉得重新买个衣服呗，反正旧的不去新的不来。总之就是因为需要去瘦身，因为不得不要去瘦身，但就不是因为想要而去瘦身 小强参加了5期瘦身营，发现凡事瘦身成功的人，要不然是因为痛苦，要不然是因为热情。 痛苦就是：感觉到胸闷，气短，身体感觉到要发出警报了 热情就是：我太太太太喜欢瘦的样子，完全不能接受生了小孩胖的样子，我一定要瘦回去 走脑的目标就是需要，不得不要，走心的目标就是自己真正想要去做对于走脑的年度计划一开始就注定失败了，只不过用12个月去证明，走心的目标就会有两种动力在支持着，一种就是热情一种就是痛苦，不然别人怎么说都会坚持下去，即使遇到的平台期其实很多人的计划都是在平台期放弃的，当你在平台期的时候，有了这两种动力，你就会坚持下来，真正的达到自己的目标 怎么才能制作一份走心的年度计划呢？从展望愿景开始 为什么要这么做，有两个原因 从愿景出发是人类最自然的方式，只不过很多人没有觉察到比如说，中午同事们打算聚餐去，那这时脑袋里浮现的是什么呢？不是去肯德基还是川菜馆，而想象起聚餐的那种场景，大家热热闹闹的场面，这个就是一个愿景，然后才会去选择，去哪里吃饭，这时候才会根据愿景去判断去哪一家。再举个例子，你计划去美国旅行，脑袋里浮现的不是路线，去哪里住，怎么卖票等，脑袋里浮现的是：我在66号公路自驾时阳光洒面路面的场面，可旁边开过去的漂亮MM打招呼，吹口哨。如果你喜欢篮球的话，浮现的可能是，我在勇士队的季后赛主场，用我全身的力气去呐喊加油，虽然人家听不懂 不仅仅让你吸引到资源和人脉，还会让你变得更加积极有点像 吸引力法则，比如晚上会小区的时候，全家人都在车里喊，有车位有车位（这不是一个目标，这是个愿景），但可能经常回去一辆车从小区开出来，空出一个车位。 感觉好灵，其实是吸引力法则重新从积极的方面去解释了这个巧合。 愿景也是一样，当发生一些符合你愿景的事，你会说，哎呀这正是我想要的，这也是从积极的方面去解释了这个巧合 怎么去展望愿景呢？方法是写一封给5年后自己的信，当这封信写完的时候，5年后自己的样子就历历在目了 小强示范的给5年后自己的信 前不久刚和家人从非洲回来，总算是和家人一起足迹遍布7大洲了，我终于可以嘚瑟的说，我不仅是个中国人，还是一个地球人现在财务基本自由,因为几本书还有书的延伸品包括在线课程和实体产品都销售的不错苹果出的新手机新电脑什么的坐为脑残粉可以毫不犹豫的拿下了应该更多的关心自己的身体和梦想了吧我每周都回去健身房两次，除此之外还经常打羽毛球和篮球，我的杀手锏已经不再是充沛的体力和积极的跑位的，中距离远投也有很高的命中率写下的100个梦想，也基本完成了一半，争取把剩下的尽快搞定除此之外，我还经常和一大群志趣相投的朋友一起读书喝酒吃肉，互相支持着，这种感觉真是太棒了这就是我想要的生活，简单，幸福，加油吧~~ 这封信可以一直保持着，每年可以做些稍稍的修改，可以放在笔记的快捷方式里，没事就打开看看，它就像是一个能量球一样，当我累的快不行的时候就读一遍，补充点能量。 写这封信看上去简单，也很容易进入两个误区第一个误区：列干条条，没有画面感 每周去健身房两次，10月份去台湾旅行，制作时间管理在线课程要运用5感去写，看到什么，听到什么，问到什么，尝到什么，感觉到什么 举例：肯德基的广告 54层酥皮的全新肯德基法风烧饼，法式工艺，层层酥脆，口口汁香，搭配熏鸡肉和生菜，美味层层叠，一早过足瘾画面中的男主角还要要上一口，汁液四溅，然后还要做出很享受的样子，这就是刺激5感的愿景式广告 第二个误区：写的全是感受，就想是倾述一样，但没有什么用 嗨，五年后的我，你一定过得非常幸福吧，一定是有人爱有事做，也有所期待吧，每一天都过得非常充实，虽然外面的世界在不停的改变，但是我们永远也跟不上它的步伐所以我们不要在意别人是怎么样想的，怎么活的，我只需要做好自己就行 你在写愿景的时候，写这封信的时候，你可能某个地方忍不住笑出声来，或者眼泪流下来，或者有某种怦然心动的感觉，这就对了，就特别走心了。现在你先不要评判你写的东西能否做得到，先把他写下来，因为你一评判的时候，你就开始走脑了，就不是走心了，后面有步骤判断这个愿景是不是靠谱。 下面你可以开始写一封给5年后自己的信了，开始之前，你要准备3件事： 准备一个环境，时间，最好选一个周末的早晨，早起半小时，家人都没有起床，这时候写容易和自己链接 准备一杯水，不要因为写的时候喝水什么的打断思路 准备笔和纸，强烈建议笔和纸，因为笔纸更容易把脑袋的东西写下来，兴致来了还可以画幅画。如果你要用电子笔记存档，可以写完了拍个照 也可以使用一个柔和背景音乐，让自己容易思绪流淌出来。 开始可以这么写，5年后的邹小强你好，你现在过着一个怎么样的生活呢？。。。。。 第三课：从幸福的八个方面入手上一课我们写好了愿景，这一讲将愿景进行分类一下，为什么要进行分类呢？我们可以想象一下 事业狂每天起得比鸡早，睡的比狗晚，吃的比猪差，就一门心思的干事业，结果老婆跟隔壁老王跑了，忙到最后离婚了，家庭破碎了，那还忙个什么呢。开始时打拼，后来就是心灵寄托了 低品质勤奋者比如说听完逻辑思维后，一时心血来潮下单买了很多书，但却从~来~不~看~，有人只要推荐课，再贵也要去上，每周都参加各种沙龙活动，跟不同的人碰撞交流，回家之后才发现好几天没有打扫卫生了，家里一地的灰 拜金女比如说那位宁愿在宝马里苦，也不愿在自行车上笑的那位，凡事先算算能赚多少钱，在看看做不做这个事 柔弱男风一吹就倒的宅男，整天在家待着，网下唯唯诺诺，网上敢笑红尘，名副其实的键盘侠 空想家小强的同事，国企，整天说我在也不想在这呆了，好无聊好郁闷，要出去开个面馆，创业，结果小强出来5年了，他还在国企里面待着 上面这些人共同的特点就是生活失去的平衡，在某一方面投入了太多的精力和时间 事业狂，在事业上 低品质勤奋者，在个人成长 拜金女，在财务上 柔弱男，在健康 空想家，在梦想 在单独一个方面投入太多精力，生活就失去了平衡。 想想我们为什么要做年度计划呢？是为了把自己真正想做的事情搞定，把时间花在自己真正想做的事情上是为了那种幸福感，但什么是幸福呢？罗素先生说： 参差多态，乃幸福本源所以年度计划应该是更多元，更有趣，包含人生多个方面的一种平衡。 如果你也认同这个理念，可以继续参考下面一个九宫格 可以把九宫格想象成一个人，脚下踩着的是基础，一个人的基础要身体健康，得有钱，得朋友有关系，人是一个群体动物中间就是工作和生活的平衡，头顶是3种是精神上的享受中间的格子：可以写自己的名字，或者写年度主题，比如2017年：打拼的一年，或者积累的一年，是你的年度语 你也可以把你的笔记资料按照这些方面分类 接下来把写给5年后的自己愿景放到九宫格里面归类，归类不要纠结于对错，这个只是对自己的一个初心的一个投射，没有对错之分。 注意不要把格子填满，下面留些空白，下一讲把这些愿景分解的目标，写在下面。你也可以更进一步可以制作成图片，放在自己电脑或者手机的桌面，没事可以看看，虽然这个有点类似成功学的梦想板的那一套，但确实有事很有效果（小强在写《小强升职记》这本书的时候，就经常这么做，有一种偷偷的暗暗努力的感觉，觉得很棒） 第四课：把美好的愿景转化为明确的目标这一课把5年的愿景转化成这一年具体的目标，在转化的过程中，你可以能发现有些目标不是那么靠谱了，这并不是自己想要的，那这个时候就要勇敢的拿起大刀把它砍掉，这可以节省我们很多时间。 问自己的一个问题，为了实现这个愿景，我要在接下来的一年，达到什么目标，然后把目标写在格子里，愿景的下面，这样就完成了愿景到目标的转换。 有些愿景转化为目标，可能是简单的，如： 愿景是足迹遍布7大洲，接下来的目标可以是，10月份带家人去澳大利亚玩 愿景是保持着阅读的习惯，目标是一年阅读50本书 也有些愿景比较难转化为目标，如： 心灵更加自由 我想财富自由 我要成为一个斜杠青年 对于较难转化的，有一个简单的方法，三步，先定义，再计划，最后下一步行动 定义：什么叫心灵自由，去做没有做过的事 计划：请朋友列出想做的事 下一步行动：从朋友列出的想做的事，找出12个，每个月做一个 定义：财务自由，非工资收入大于总支出 计划：快速赚第一桶金，靠第一桶金投资获得被动收入（如希望每月有两万被动收入，那就需要240万，10%年收益投资） 下一步行动：接下来一年制作一个在线课，获得第一桶金收益 定义：斜杠青年，能够拥有多重职业（带来收入）和身份(IT男，瑜伽教练，工具书作家)的多元生活 计划：精深学习瑜伽 下一步行动：咨询了解知名瑜伽学习机构，报名学习课程 第五课：用SMART原则让目标更容易实现如何保证目标能实现，没有人能保证，但是用SMART原则，可以增加实现几率 S:具体的 M:可衡量的 A:可达到的 R:相关的 T:明确的时间底线的 关于相关性，比如 背单词这个目标，因为要通过教师资格证的考试，这样背单词目标和考教师资格证相关，那样就会更加有动力，如果光光背单词，没有其他相关，就没有意义。 举几个目标的例子 我要三个月内学会谈吉他：不符合，不具体（什么叫学会？），换成在朋友聚会弹唱《春天里》靠谱一点 我想继续考研究生：不符合，（相关性，为什么考研究生？）如果是为了升职加薪，那么换成继续考研究生，增加升职加薪的几率，就比较好了 我要减肥：严重不符合（不具体，不可衡量，没有时间底线）换成三个月内通过每天跑三公里的方式减重10斤 我要找男朋友：不符合（结果不可衡量）换成每个月跟朋友聚会一次更好小强的感悟：做事靠系统，做人靠真心 注意事项： 如果哪个格子没有目标，试着找一个，保持平衡 每个格子目标不要太多，不要超过3个，精力有限(太多的话，计算热情，痛苦，时机的方法取舍，适合各种选择困难症) 计划 痛苦 热情 时机 学厨艺 8 8 4 弹吉他 2 2 5 找到帮助你实现目标的Key Man，Key Man就是掌握着实现计划的关键资源或关键技能 小强又一次去听一个很有名的人来西安做的演讲，然后他特别想听，有一个特别想问一个问题。但是现场有两百多人，嘉宾到提问环节，小强举了N次手都没用，终于发现这个嘉宾，要不然选择30岁以下的女性，要不然选择30岁以上的女性:)，感觉完全没戏了。 这时怎么办呢，有人说，可以冲上去直接问，或者抢过话筒问，或者让一个美女帮你去问，不过这些方式都不够优雅后来小强猫着腰走到会场另外一头，问拿话筒的服务员，说我下面想问一个问题，你能把话筒先给我吗？服务员就把话筒给他了，当前面的人回答问题之后，就可以直接问问题了这里的Key Man就是那个服务员 如果你做年度计划的时候，发现某个有助于实现目标的Key Man，把他写在目标旁边 第六课：如何培养搞一个好习惯上面一课我们做好了带有目标的九宫格，现在请拿起就宫格，看你写着的2017年的目标，你会发现目标虽然很多，但只分为两类，一类叫习惯，一类叫项目 习惯就是周期性做的事情 项目就是多人多步骤完成的事情现在将九宫格的目标进行分类，习惯就在前面画个圆圈，项目就画个三角。 现在看看你是怎么去培养习惯的呢？就拿培养跑步的习惯来说，是不是浏览超多的培养习惯的文章，然后买一堆装备，比如跑鞋，瑜伽垫什么的，在下载个APP，再加入一个群，一群人热热闹闹的在一起，当然还有可能在手机上设置一个循环闹钟提醒。你以为这样就算培养习惯了，其实这只能算作为热身，你有没有发现这些都是在你可控范围内去做的事，比如想买东西，花钱就能买到了，但是不可控的部分，你总是在逃避比如说，如何去制定培养习惯的计划，你会遇到什么阻碍，遇到阻碍的时候，你该如何调整呢，是不是这些压根没有想过，所以培养习惯没有那么容易成功了 培养习惯是改变自己的一个过程，向内求才是改变的开始，跟自己链接，跟自己承诺，跟自己计划。 培养习惯的方式有三步 建立一个仪式 写一个培养习惯的卡片,当做对自己的一个承诺 制定一个循序渐进的计划 先从两周开始，给计划增加3条命(注：3次没有做的机会) 积极的记录 培养习惯中遇到的坑： 1次培养多个习惯 (每天6:30起床，背单词 是两个习惯) 换成（每天6:30起床，看美剧） 关注过程和感受，而不是结果 加入社群，但是潜水不说话，Lonely Together 第七课：制作项目计划的“水滴计划法” 上一课讲了习惯类的目标，这一课和大家分享，项目类的目标，如何做计划 举例：制作时间管理的课程 很多人遇到这个项目会怎么开始做计划呢，他会问自己一个经典的问题，下一步我该怎么办呢？然后列出步骤，比如说，第一步 列出课程大纲，第二步 完成第一节课的内容，第三步 完成第二节课的内容，等等，最后一步合成导出，放到网上，这算是把一个项目分解成一个个的行动了。这样的方式，虽然一个步骤一个步骤都很明确，但却比较容易深入细节，失去对全局的掌控，所以很多项目管理的新手，都有顾此失彼，突发状况不断的情况出现。 这是因为他把项目和任务混为一谈了，项目和任务的区别如下： 项目：多人多步骤做的事 （面） 任务：一个人多步骤做的事 （线） 小强制作项目计划的方法，叫水滴计划法，想象一下，一滴水滴入湖面，会发生什么反应呢？是不是 扑通一声，激起水花，泛起一圈一圈的涟漪，最后又归于平静 做项目规划的时候，也是一样 现在做的大部分事情，其实有人已经做好了框架，我们应该借助这些框架，比如说 竞品分析，用SWOT框架(Superiority Weakness Opportunity Threats) 生产作业现场发现了问题，可以用 人机料法环 框架，找出问题所在 创业项目，商业模式新生代的方法，客户是谁？价值主张是什么？核心业务是什么？渠道通路是什么？ 给朋友买礼物不知道买什么时，可以使用衣食住行框架 那你平常工作的时候，肯定会遇到这样的困惑，为什么同样是工作5年，同事小A就变成了经验丰富的骨干，而同事小C却还是菜鸟一枚呢？因为小C的工作经验就像是流水一样，匆匆流过，根本就没有存储起来，比如说你没做一个项目，都问自己，下一步该怎么办呢？下一步怎么办？好像每一步都很具体，执行起来也很顺利，但是你的经验并没有积累下来。而小A为积累经验，修建了一座水池，工作经验都在这座水池里存储起来，这座水池就是上面提到的框架，你想想每一次都用同样的框架，去做项目的分解，获得的经验有去不断的升级这个框架，自然就会成长的越来越快，这种框架里就是经验的一种体现 水滴计划法可以当做思维导图的一种在项目计划方面的应用 如果你有多个项目，有多个人在负责，应该如何掌控呢，建议使用甘特图 第八课：用“4D工作法”管理好每天的事情年度计划完成不了的人，通常会有这样的想法，我把每天的事情忙完之后，再去做那些年度计划相关的事吧。 可以往往每天的事根本忙不完，就算忙完了也累趴了，哪有时间去做年度计划相关的事。所以一拖再拖，到底年底就开始感慨，时光飞逝，年度计划又落空了。 不建议将当天的事和年度计划相关的事区别对待，他们应该混在一起，统统的列在每日的计划里面。 那么问题来了，每天那么多的事，怎么去做每日计划，才会忙而不乱呢？那你现在是怎么管理这些事的呢？ 有些人使用脑子记，这些人会经常遇到这样的场景，哎呀我把这事给忘了，我现在就帮你做。这就是因为我们把事情记在脑子里，而我们的脑袋是擅长思考，而不是记忆，所以超过7件左右的事情，我们的大脑特别容易产生遗忘。除此之外，事情都记在脑袋里，你还会感觉到压力和焦虑，比如说，你在做PPT的时候，突然会想到，我还要做啥事的，怕他给忘了，你老这样想的时候，你会觉得压力真的很大 另外一些人把要做的事，一条一条写在清单上，这是一个特别好的习惯，但是这样列干条条的方式有两个不组 容易加班 有没有发现一天结束的时候，往往清单上简单的是都做完了，但重要的事都没有做，只能加班了 容易乐观估计时间资源 我们总是容易乐观估计一天内能完成的事，而又国语悲观估计了一年内能完成的事 4D工作法 首先准备一个本子（参考IM手账）用星标标出今天要做的重要的事，有限完成，左边的时间轴，合理评估一下今天的时间资源，合理安排计划，右边的空白区，作为自由区 建立一个启动每日计划的仪式 可以是早饭后，用一个待办工具，比如是滴答清单，列当天的待办事项。注意与其写固定时间，不如写场景，比如：开会后，下班回家地铁上，睡觉前 用4D工作法梳理脑袋里所有的事情 别人要你帮忙做事的事情，先经过自己的清单系统，看这件事情是不是最重要紧急的事，是就做，如果不是，就拒绝或者延期处理 把4D工作法梳理的事情写在本子上，立即去做的事情，就写在右边的自由区，标注星标 4D工作法在笔纸上的应用]]></content>
      <tags>
        <tag>reading</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何创建优雅的PowerShell脚本]]></title>
    <url>%2F2016%2F12%2F02%2Fhow-to-create-elegant-powershell-scripts%2F</url>
    <content type="text"><![CDATA[PowerShell有很多内置的命令，我们自己也会创建很多自定义的脚本，如何使自己创建的脚本能有系统自带的命令一样的体验呢？ 答案就在于Function，在Windows PowerShell 2.0 中引入了一种新类型的Function，叫Advanced Function，通过它你可以创建出跟Windows PowerShell的cmdlet体验完全一样命令。 本文从以下几个方面讨论如何创建自己的 Advanced Function。 命名一个 Function我们自己创建一个脚本，命名可能比较随意，比如 DownloadFile.ps1，用于下载一个文件，但是我们观察PowerShell自带的命令，一般是以 动词-名字 来组织命令的。所以对于刚才的DownloadFile.ps1我们可以命名为 Download-File.ps1 我们最开始创建的脚本可能是这样的创建 C:\Download-File.ps1 内容如下1234567param( [Parameter(Mandatory=$True)][String] $Url, [Parameter(Mandatory=$True)][String] $LocalFile )$client = New-Object System.Net.WebClient$client.DownloadFile($Url, $LocalFile) 这样一个基本的下载文件的Function就创建好了，测试一下，效果应该如下123456789PS C:\&gt; .\Download-File.ps1 &quot;http://ss.bdimg.com/static/superman/img/logo/bd_logo1_31bdc765.png&quot; c:\logo.pngPS C:\&gt; ls c:\logo.png Directory: C:\Mode LastWriteTime Length Name---- ------------- ------ -----a--- 2016/12/8 14:52 3706 logo.pngPS C:\&gt; 内置帮助信息当我们不知道一个PowerShell命令如何使用的时候，我们一般会输入 Get-Help Cmdlet 的方式来获取信息，那么我们如何为Download-File提供帮助信息呢？我们可以使用内置的注释模块如下： 123456789101112131415161718192021&lt;#.SYNOPSIS Download a file.DESCRIPTION Download a file from internet, you must provided a valid url of the file.EXAMPLE Download-File "http://ss.bdimg.com/static/superman/img/logo/bd_logo1_31bdc765.png" c:\logo.png.EXAMPLE Download-File -Url "http://ss.bdimg.com/static/superman/img/logo/bd_logo1_31bdc765.png" -LocalFile c:\logo.png.PARAMETER Url The Url information for the file to download.PARAMETER LocalFile The destination file will dave in local#&gt;param( [Parameter(Mandatory=$True)][String] $Url, [Parameter(Mandatory=$True)][String] $LocalFile )$client = New-Object System.Net.WebClient$client.DownloadFile($Url, $LocalFile) 执行Get-Help 会出现下面效果，我们看到在上面书写的注释已经正确显示出来了，我们也可以用 get-help C:\Download-File.ps1 -examples 去获取示例对这几个参数简单说明一下： .SYNOPSIS 对命令的简要描述.DESCRIPTION 对命令的详细描述.EXAMPLE 命令的使用范例，可以写多个范例.PARAMETER 对命令需要的参数做描述，可以对列举多个参数.NOTE 除以上外还可以用NOTE写一些备注信息，NOTE信息只是做参考，不会在 Get-Help 时出现 123456789101112131415161718192021PS C:\&gt; Get-Help .\Download-File.ps1NAME C:\Download-File.ps1SYNOPSIS Download a fileSYNTAX C:\Download-File.ps1 [-Url] &lt;String&gt; [-LocalFile] &lt;String&gt; [&lt;CommonParameters&gt;]DESCRIPTION Download a file from internet, you must provided a valid url of the fileRELATED LINKSREMARKS To see the examples, type: &quot;get-help C:\Download-File.ps1 -examples&quot;. For more information, type: &quot;get-help C:\Download-File.ps1 -detailed&quot;. For technical information, type: &quot;get-help C:\Download-File.ps1 -full&quot;. 发布一个模块至此我们已经写好一个模块，但是是以单个脚本文件存在的，调用时需要输入路径，还是和内置的Cmdlet有些区别。这时候我们可以借助PowerShell Module。将以上脚本封装到Function里，然后统一放到PowerShell Module里 创建文件: MyModule.psm1，内容如下12345678910111213141516171819202122232425Function Download-File &#123; &lt;# .SYNOPSIS Download a file .DESCRIPTION Download a file from internet, you must provided a valid url of the file .EXAMPLE Download-File "http://ss.bdimg.com/static/superman/img/logo/bd_logo1_31bdc765.png" c:\logo.png .EXAMPLE Download-File -Url "http://ss.bdimg.com/static/superman/img/logo/bd_logo1_31bdc765.png" -LocalFile c:\logo.png .PARAMETER Url The Url information for the file to download .PARAMETER LocalFile The destination file will dave in local #&gt; param( [Parameter(Mandatory=$True)][String] $Url, [Parameter(Mandatory=$True)][String] $LocalFile ) $client = New-Object System.Net.WebClient $client.DownloadFile($Url, $LocalFile)&#125;Export-ModuleMember "*-*" 导入Module文件，我们看到PowerShell提示了一个Warning，原来是我们使用的动词不规范，Download并不在被认可的动词清单之中。123456789PS C:\&gt; Import-Module .\MyModule.psm1WARNING: The names of some imported commands from the module &apos;MyModule&apos; include unapproved verbs that might make themless discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verboseparameter. For a list of approved verbs, type Get-Verb.PS C:\&gt; Get-Command -Module MyModuleCommandType Name ModuleName----------- ---- ----------Function Download-File MyModule 使用 Get-Verb，选取一个合适的动词，如：Get-WebFile 最后一步将多个Function封装到Module文件中，取一个合适的Module名字，再借助于GitHub，我们可以将自己的类库分享给更多的朋友使用啦 在此我也安利一下我整理的PowerShell类库，存放在 https://github.com/cylin2000/powertask ,只需一句话调用即可使用，方便快捷 1iex (new-object net.webclient).downloadstring(&apos;https://raw.githubusercontent.com/cylin2000/powertask/master/PowerTask.ps1?t=&apos;+(Get-Random)) 参考资料https://blogs.msdn.microsoft.com/timid/2013/07/03/why-use-approved-verbs/https://msdn.microsoft.com/en-us/library/windows/desktop/ms714428(v=vs.85).aspxhttps://visualstudiogallery.msdn.microsoft.com/f017b10c-02b4-4d6d-9845-58a06545627fhttps://technet.microsoft.com/en-us/library/hh360993.aspx]]></content>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于REST的接口定义思考]]></title>
    <url>%2F2016%2F08%2F08%2Fangular-rest%2F</url>
    <content type="text"><![CDATA[因前后台分离，使用AngularJS作为纯前端，需要设计一组基于JSON的API，统一前后台的接口规范。 该组API需要有如下特性: 统一接口调用风格 统一接口返回码 以尽可能简单的方式提供调用说明 接口支持增删改查等基本功能，也有其他自定义功能，如 软删除(IsDeleted = 1) 调查首先想到的是REST，设计一套RESTful的方案，如 http://www.dummy.com/api/menu 提供最MENU的管理使用HTTP动词作为操作管理 GET : 获取菜单POST : 创建菜单PUT : 创建或更新菜单DELETE : 删除菜单 现实使用的时候发现如下问题： GET 接口可以返回一个数据{menu} 或者一组数据[{menu},{menu},{menu}], 后台要单独处理 1234如 GET /menu 返回 一组[&#123;menu&#125;,&#123;menu&#125;,&#123;menu&#125;]GET /menu/1 通过路由映射到后台 Menu(int id) 方法，返回一个menu但是 如果我的查询条件中就有包含 &#123;id:1&#125; 这样的条件，那么会出现GET /menu , post data &#123;id:1&#125;, 这样会自动路由到 Menu(int id) 方法，期望的是返回menu数组，其中包含一个menu [&#123;menu&#125;]，后台只返回了一个&#123;menu&#125; 按照wikipedia的举例，menu和menus是分开的 12GET http://www.store.com/productsGET http://www.store.com/product/12345 REST推荐通过状态码返回出错信息 对于HTTP的状态吗，常规的我只记得 200 返回正常 401 认证错误 404 找不到页面 500 服务器错误 其他的只能现用现查，这样当后台返回409，我查完得知表示资源冲突，但是具体冲突是因为什么，还是需要和后台沟通好。 另一个问题是，直观的感觉，返回200就代表正常，如果4xx，5xx就感觉是服务器错误，和我的应用程序无关才是，3xx基本没碰到过。 但是这里409是我们自己后台抛出的，和服务器无关。我不希望将系统错误，传输错误和应用程序错误混为一谈。 只有四个动词，不够描述后台所有的操作，按照REST的推荐，应该都封装到PUT里 而微信公众号的接口设计却没有完全使用这种方式123https://api.weixin.qq.com/cgi-bin/menu/create?access_token=ACCESS_TOKENhttps://api.weixin.qq.com/cgi-bin/menu/get?access_token=ACCESS_TOKENhttps://api.weixin.qq.com/cgi-bin/menu/delete?access_token=ACCESS_TOKEN 百度地图的API也是1http://lbsyun.baidu.com/index.php?title=webapi/guide/webservice-placeapi 虽然HTTP的动作只有4个，但是后台为了操作明了，同样还是需要创建多个function来表示不同的操作内容，前台AngularJS同样需要创建多个function来表示动作 某些浏览器不支持PUT,DELETE等从此（这个问题现在好像不成问题了） 安全按照微信API的方式，统一使用access_token，就是说每次请求都需要带入access_token，防止跨站攻击 思考我一直想强行用REST的方法整理接口，因为这个标准存在了，与别人沟通的时候，公认约定总归好于个人约定 但是使用过程中诸多不顺，因此查找文章以及知名开放API的提供者，比如微信公众号API 终于找到了支撑自己的几个理由： REST是设计风格而不是标准，这也是很多地方说RESTful的原因，既然是风格那也就是可以有选择的使用 微信的API设计，并不是完全的REST，他的动词都是放在资源的后面，这点结合后台api的function非常方便，微信API的使用频率和使用量应该可以打消我们其他的顾虑，比如效率，安全 SOAP也是一种WEB访问协议，他封装了操作，用XMLSpy访问SOAP的wsdl，可以得到可以操作的方法，只是使用方法复杂，我们为何不可把操作结合到REST风格的url里，这样既可知道调用方法，又不需通过复杂的方式取得 古老的箴言 如果你手里有一把锤子，所有东西看上去都像钉子。 结论找到了理由，自然要设计适合自己的API，而不是用REST就全部REST 结论很简单，即使用REST那样清晰明了的URL风格，结合SOAP的动作的描述方式，对动作在URL进行描述。所有的返回都是200，应用程序错误用errcode表示 接口只使用GET 和POST 两种动词 , 这样不存在浏览器兼容问题12345678910111213141516171819202122232425http://www.dummy.com/api/menu/get 表示获取菜单(单个记录)http://www.dummy.com/api/menu/query 表示查询菜单(多条记录)，post数据中加入查询条件http://www.dummy.com/api/menu/create 表示创建菜单http://www.dummy.com/api/menu/update 表示更新菜单http://www.dummy.com/api/menu/delete 表示删除菜单结合 AngularJS的 Resourceapp.controller('TableCtrl',function($scope, $routeParams, $resource) &#123; var User = $resource('/api/user/:_action', &#123;id:"@id"&#125;, &#123; get: &#123;method:"GET", params:&#123;_action:"get"&#125;&#125;, query: &#123;method:"POST", params:&#123;_action:"query"&#125;, isArray:true&#125;, create:&#123;method:"POST", params:&#123;_action:"create"&#125;&#125;, update:&#123;method:"POST", params:&#123;_action:"update"&#125;&#125;, delete:&#123;method:"GET", params:&#123;_action:"delete"&#125;&#125;, &#125;); $scope.users = User.query(&#123;ticket:"1155"&#125;); $scope.id = $routeParams.id; if($scope.id)&#123; $scope.user = User.get(&#123;id:$scope.id&#125;) &#125;&#125;); 不需要参数的，或者参数在URL中提供的使用GET方法 123http://www.dummy.com/api/menu/get http://www.dummy.com/api/menu/get?id=5http://www.dummy.com/api/menu/delete?id=6 需要提交数据的使用POST方法 12345678910http://www.dummy.com/api/menu/createPOST数据如下&#123; name:"测试菜单"&#125;http://www.dummy.com/api/menu/update&#123; id:"5", name:"新菜单"&#125; 返回格式 123456789101112131415161718操作正确&#123; "errcode":0, "errmsg":"ok"&#125;操作错误&#123; "errcode": 401, "errmsg":"No Access"&#125;操作正确有数据&#123; "errcode":0, "errmsg":"ok", "menu":&#123; "name":"测试菜单" &#125;&#125; http://www.dummy.com/api/menu/help 获取menu下的接口说明文档，以json返回，这样接口就可以像SOAP那样，自说明这个只是一个设想，需完善 12345678910111213141516&#123; "get":&#123; "http":"get", "request":&#123;&#125;, "response":&#123; "errcode":0, "errmsg":"ok" &#125; &#125;, "create":&#123; "request":&#123; &#125;, "response":&#123; &#125; &#125;&#125; 参考文章https://zh.wikipedia.org/zh-cn/RESThttps://zh.wikipedia.org/zh-cn/SOAPhttp://www.infoq.com/cn/articles/rest-introductionhttp://mp.weixin.qq.com/wiki/10/0234e39a2025342c17a7d23595c6b40a.htmlhttp://mindhacks.cn/2009/01/16/hammers-and-nails/http://blog.csdn.net/pongba/article/details/3796771]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>tech</tag>
        <tag>angular</tag>
        <tag>rest</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AngularJS 动态加载的思考]]></title>
    <url>%2F2016%2F07%2F21%2Fangularjs-dynamic-loading%2F</url>
    <content type="text"><![CDATA[本文使用的AngularJS是基于1.x版本的。 使用AngularJS做前端，路由都是静态配置的，久而久之发现每次新增加一个模块都要配置一下路由，实在有些麻烦，遂研究了一下能否动态配置路由信息 现状项目中使用的是ui-router，因为要支持多级路由，所以没有使用默认的路由，代码如下 1234567891011121314151617181920angular.module('app').config(function ($stateProvider, $urlRouterProvider) &#123; $urlRouterProvider.otherwise("/login"); $stateProvider .state('home', &#123; url: '/home', controller: 'homeController', templateUrl: 'views/home.html' &#125;) .state('feature1', &#123; url: '/feature1', controller: 'feature1Controller', templateUrl: 'views/feature1.html' &#125;) .state('feature2', &#123; url: '/feature2', controller: 'feature2Controller', templateUrl: 'views/feature2.html' &#125;) &#125;) 如此对 /home, /feature1, /feature2 这样的模块，每次增加一个就要做如下动作 添加state记录 state,url,controller,templateurl都按照约定写好，否则不容易直接找到 index.html 页面里要添加controller的js文件这样下来，当模块达到十几或几十个的时候，首页就是一串JS的文件引入，config里面state也是很多定义，关键是，任何一个地方写错一个字母，功能就直接没用了。 解决开始尝试像后台MVC一样，比如#/home, 就动态载入 views/home.html 配合 controllers/home.js，后来发现state不配置还是很难的。 退而求其次。 预定义一个数组，然后按自定义规则加载1var states = ["home","about","about.company","contact"]; 然后根据名称，自动约定加载controller和view信息，关于controller的自动加载，使用了ocLazyLoad模块 核心代码如下 123456789101112131415161718192021222324252627282930313233angular.module('app').config(function ($stateProvider, $urlRouterProvider) &#123; $urlRouterProvider.otherwise("/home"); var states = ["home","about","about.company","contact"]; angular.forEach(states, function(state) &#123; var controllerName = state.replace(/\../g,function(m)&#123; return m.replace(".","").toUpperCase()&#125; ); var state_parts = state.split("."); var controllerFile = state_parts[0]; var url = "/"+state_parts[state_parts.length - 1]; $stateProvider.state(state, &#123; url: url, templateUrl: 'views/' + state + '.html', controller: controllerName + 'Controller', resolve: &#123; deps:['$ocLazyLoad', function($ocLazyLoad) &#123; return $ocLazyLoad.load ([ &#123; name: 'controllers', files: [ 'js/controllers/'+controllerFile+'.js' ] &#125; ]) &#125;] &#125; &#125;) ; &#125;)&#125;) 使用此方法，还是不能像后端MVC那样自动解析，但是已经可以少些很多重复代码了。]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>tech</tag>
        <tag>angular</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PowerShell小说爬虫]]></title>
    <url>%2F2016%2F06%2F20%2Fdownload_novel%2F</url>
    <content type="text"><![CDATA[老婆最近迷上了网络小说，在线一张一张网页看的那个累啊，而且广告不停弹出，非常烦人。我就赶紧发挥一把，让她知道编程的还是有作用滴 虽然知道Python在爬虫方面是个强项，暂时还不会写Python脚本，就用powershell勉强实现以下，直接上代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445$url = "http://m.d8qu.com/104/104936/12850949.html"$out = "c:\novel.html"$wc = New-Object System.Net.WebClient#$index = $wc.DownloadString($url)#$reg = [regex]'&lt;a href="(/read/31485/.*?)".*?&gt;(.*?)&lt;/a&gt;'#$mm = $reg.Matches($index)$i = 1$fullContent = ""for(;$i -le 614;)&#123; $chapterUrl = $url $chapterContent = $wc.DownloadString($chapterUrl) $chapterReg = [regex]'(?s)&lt;div id="nr1".*?&gt;(.*?)&lt;/div&gt;' #(?s)表示多行/跨行匹配 $chapterMatch = $chapterReg.Matches($chapterContent) $chapterText = $chapterMatch.Groups[1].Value $titleReg = [regex]'(?s)&lt;div.*?id="nr_title"&gt;(.*?)&lt;/div&gt;' $titleMatch = $titleReg.Matches($chapterContent) $chapterTitle = $titleMatch.Groups[1].Value $nextReg = [regex]'&lt;a id="pb_next" href="(.*?)"&gt;下一章&lt;/a&gt;' $nextMatch = $nextReg.Matches($chapterContent) $nextUrl = $nextMatch.Groups[1].Value $title = $chapterTitle.Trim() Write-Host "处理 $url $title" #Add-Content $out "$chapterTitle &lt;br/&gt;" #Add-Content $out "$chapterText &lt;br/&gt;&lt;br/&gt;" $fullContent = $fullContent+"$chapterTitle &lt;br/&gt;" $fullContent = $fullContent+"$chapterText &lt;br/&gt;&lt;br/&gt;" $url = "http://m.d8qu.com$nextUrl" $i++&#125;Add-Content $out $fullContent #一起写入，防止不停Add-Content出现文件占用错误 有需要的拿去改改~]]></content>
      <tags>
        <tag>tech</tag>
        <tag>powershell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PowerShell小说爬虫]]></title>
    <url>%2F2016%2F06%2F20%2Fdownload-novel%2F</url>
    <content type="text"><![CDATA[老婆最近迷上了网络小说，在线一张一张网页看的那个累啊，而且广告不停弹出，非常烦人。我就赶紧发挥一把，让她知道编程的还是有作用滴 虽然知道Python在爬虫方面是个强项，暂时还不会写Python脚本，就用powershell勉强实现以下，直接上代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445$url = "http://m.d8qu.com/104/104936/12850949.html"$out = "c:\novel.html"$wc = New-Object System.Net.WebClient#$index = $wc.DownloadString($url)#$reg = [regex]'&lt;a href="(/read/31485/.*?)".*?&gt;(.*?)&lt;/a&gt;'#$mm = $reg.Matches($index)$i = 1$fullContent = ""for(;$i -le 614;)&#123; $chapterUrl = $url $chapterContent = $wc.DownloadString($chapterUrl) $chapterReg = [regex]'(?s)&lt;div id="nr1".*?&gt;(.*?)&lt;/div&gt;' #(?s)表示多行/跨行匹配 $chapterMatch = $chapterReg.Matches($chapterContent) $chapterText = $chapterMatch.Groups[1].Value $titleReg = [regex]'(?s)&lt;div.*?id="nr_title"&gt;(.*?)&lt;/div&gt;' $titleMatch = $titleReg.Matches($chapterContent) $chapterTitle = $titleMatch.Groups[1].Value $nextReg = [regex]'&lt;a id="pb_next" href="(.*?)"&gt;下一章&lt;/a&gt;' $nextMatch = $nextReg.Matches($chapterContent) $nextUrl = $nextMatch.Groups[1].Value $title = $chapterTitle.Trim() Write-Host "处理 $url $title" #Add-Content $out "$chapterTitle &lt;br/&gt;" #Add-Content $out "$chapterText &lt;br/&gt;&lt;br/&gt;" $fullContent = $fullContent+"$chapterTitle &lt;br/&gt;" $fullContent = $fullContent+"$chapterText &lt;br/&gt;&lt;br/&gt;" $url = "http://m.d8qu.com$nextUrl" $i++&#125;Add-Content $out $fullContent #一起写入，防止不停Add-Content出现文件占用错误 有需要的拿去改改~]]></content>
      <tags>
        <tag>tech</tag>
        <tag>powershell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Path To Long 删除方法]]></title>
    <url>%2F2016%2F05%2F20%2Fdelete-path-too-long%2F</url>
    <content type="text"><![CDATA[Windows下文件夹路径太长导致删除不掉，可以使用robocopy的方式去删除，一次不行执行两次 1234mkdir empty_dirrobocopy empty_dir the_dir_to_delete /s /mirrmdir empty_dirrmdir the_dir_to_delete]]></content>
      <categories>
        <category>疑难杂症</category>
      </categories>
      <tags>
        <tag>tech</tag>
        <tag>file</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular项目结构思考111]]></title>
    <url>%2F2016%2F05%2F16%2Fangular-refactor%2F</url>
    <content type="text"><![CDATA[最近在重构项目组的两个前端项目，都是基于AngularJS的，重构的过程中有些思考，在此记录下来备忘以及参考 重构目的 创建公共的web前端项目，在启动其他类似项目的时候，可以最小修改的去使用 规范前端js代码，去除不必要的全局变量，统一命名风格 异常处理、日志记录、诊断、安全性和本地数据储藏等模块，许多地方都可以用，可以抽取到同一个地方 约定命名 js/css/html 文件，如果有多个单词，用连字符-，如 jquery datagrid，则写作 jquery-datagird 目录结构 按功能模块划分 按照它们代表的功能来给创建的文件夹命名，当文件夹包含的文件超过7个,就考虑新建文件夹 为什么？ 开发者可以快速定位代码，快速识别文件代表的意思，结构尽可能扁平 路由和controll对应关系可以很容易找到 如果按照类型划分功能，如当controller里文件很多时，在到对应view里找相应的文件，就会变得比较麻烦 路由和controller/view的对应关系，可以很容易找到 一般目录网站目录结构 1234567891011web/ css/ #所有自定义样式，包括字体 reset.css #重置浏览器样式 app.css #应用程序自定义样式 img/ #所有自定义图片文件 js/ #所有自定义js脚本 app.js #应用程序引导脚本 lib/ #所有第三方文件，每个目录表示一个第三方文件 angularjs #引入angularjs类库 jquery #引入jquery类库 bootstrap #引入bootstrap AngularJs网页目录结构，按模块划分 1234567891011app/ css/ img/ js/ controllers/ #angular controller 定义，一般和view匹配 directives/ #angular directive定义 services/ #angular service定义 app.js #app定义，定义这个app使用了多少其他模块 config.js #app配置，定义路由信息 lib/ #第三方类库，同上 views/ #所有视图文件，独立出来是方便可以使用其他视图 为什么? 将views单独出来，可以较为容易的替换皮肤，因为js的逻辑可以不变 单独定义directive和service，因为这两块内容可以直接迁移到其他项目，如果做得很稳定，可以放到lib中 app.js/config.js 定义使用到的模块和路由信息，可以提供基础模块，使用到新项目是再自由添加和修改 controllers 一般新项目都会单独重写]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>tech</tag>
        <tag>angular</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[走进开源世界]]></title>
    <url>%2F2016%2F05%2F12%2Fenter-open-source%2F</url>
    <content type="text"><![CDATA[我的工作一直是在Windows平台下，但是最近大热的开源的方案都是在Linux下先行一步的，我决定走出舒适区，学习下Linux，进入开源的世界，做事要趁热，Let’s Go! 目标搭建一个基于linux的开发环境，安装开发软件，尽量将开发工作都在linux下完成 系统准备Ubuntu 系统拥有很好的包管理 apt-get几乎能安装需要的所有软件，以此版本linux作为基础搭建环境下载 Ubuntu 16.04 LTS http://www.ubuntu.com/download/server 更新apt-get1$ sudo apt-get update 安装 zip1$ sudo apt-get install zip 安装 apache 服务器123$ sudo apt-get install apache2 $ sudo /etc/init.d/apache2 restart #安装完成之后重启apache服务器$ sudo service apache2 restart #或者使用这个命令重启 Apache服务器，安装完成后 此版本的apache会在 /var/www/html 下面生成html文件，打开浏览器，输入 http://localhost/ 看到页面it works表示apache成功安装 安装 mysql12$ sudo apt-get install mysql-server$ sudo apt-get install mysql-client 安装完成之后，检查是否安装正常 1$ mysql -uusername -ppassword 安装 php7.012345$ sudo apt-get install php7.0$ sudo apt-get install libapache2-mod-php7.0 #安装php在apache的模块，然后重置Apache服务器$ sudo service apache2 restart$ sudo chmod 777 /var/www #设置www目录可写$ sudo nano /var/www/html/test.php #使用nano创建test.php，写入 &lt;?php phpinfo(); ?&gt; 设置完毕，输入 http://localhost/test.php 应该可以看到php的版本信息 注意：Ubuntu 16.4 LTS 自带的源中默认是php7.0，如要在 Ubuntu 16.04 (xenial) 中使用 php5 可添加第三方 PPA ppa:ondrej/php1234$ sudo add-apt-repository ppa:ondrej/php$ sudo apt update$ sudo apt install php5.6参考 http://askubuntu.com/a/756186 安装 phpmyadmin12$ sudo apt-get install phpmyadmin$ sudo ln -s /usr/share/phpmyadmin /var/www/html #链接phpmyadmin 到www目录 设置完毕，输入 http://localhost/phpmyadmin 应该可以看到登陆页面 安装 svn1$ sudo apt-get install subversion 安装 git1$ sudo apt-get install git 至此一套支持php/mysql的开发环境搭建完毕，可以使用系统自带的nano完成php文件编辑，使用phpmyadmin管理mysql数据库]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[最常用的vi命令]]></title>
    <url>%2F2014%2F06%2F29%2Fvi-command%2F</url>
    <content type="text"><![CDATA[最近在mac上偶尔要编辑文本文件，就用到了vi，遵从80/20原则，先记录下最简单常用的命令，够用即可 vi filename 打开文本文件，跟notepad一样打开文件之后，初始不是编辑状态的，你可以按 i 键进行插入操作修改完毕 按 ESC 退出编辑状态输入 :wq 保存退出，或者 :q! 不保存退出这样这几个命令简单修改下文件，比如配置文件什么的足够了]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>tech</tag>
        <tag>vi</tag>
        <tag>editor</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Todo 软件使用小结]]></title>
    <url>%2F2014%2F06%2F24%2Ftodo-practice%2F</url>
    <content type="text"><![CDATA[今年初读完了Get Things Done(中译本：尽管去做，无压的工作艺术)，也想实践一把GTD，陆陆续续的试用了很多GTD相关的软件，有重量级的如Omni Focus，也有简单的todolist，简要记录各个软件的使用心得如下。因为刚买了iPad mini 所以大部分尝试的都是iOS的软件，其实很多软件也都有Android版本。 GoTasksiOS和Android下都有版本，界面简洁，免费，可以和Google Tasks同步，支持无限级子任务。缺点是同步速度慢，有时候认证会丢失，需要重复输入密码，Google提供的Web端管理功能很弱 Wunderlist全平台支持，几乎所有的平台都有版本，免费版本可以随时同步，界面简洁，任务无上限，支持循环提醒，子任务等这个我使用时间还较长，中间放弃过一段时间去试用其他软件，缺点比如，已完成的任务不能再编辑，名称，详情，排序都不可以 Remember The Milk试用时间不长，多平台，感觉免费版限制较多 MyLifeOrganized多平台，提供目标管理视图和任务视图，让你可以做规划，也可以只关注当前要做的任务 Doit.im多平台，应该是蛮符合GTD理念的，界面简洁，免费版只能24小时同步一次（很多人因为这个原因放弃了它），收费版100元每年 TodoList强大的软件，开源，只有Windows版本，Android有个人用户开发的插件，任务的自定义属性很强大，基本没有你想不到的缺点是只有Windows平台，现在移动应用满天飞，没移动平台真不方便，另外界面也是很标准的GridView方式，没啥美感 TickTick国产软件，iOS Android 网页端都有版本，免费版可以同步，有任务条数限制，项目个数限制，不过基本够用，貌似主打海外市场 Omni Focus重量级GTD软件，看到很多文章介绍，GTD神器，价格相对较贵，只是在越狱的ipad上试了试，按照教程实施了几把，应该是视图功能用好了才能发挥它的强大，不过感觉对我来说，不需要这么强大的功能，所以就没有继续下去经过一段试用之后，发现自己已经陷入了工具选择困难中，每个工具中都有一些半拉子任务。这样就不是在实施GTD了，所以经过慎重考虑了下，只选用一种 最后决定使用Wunderlist来管理自己的待办事项，原因如下:免费，因为暂时对收费软件的使用还没有形成习惯，况且这个免费的做的真心不错多平台支持，目前有Android手机，iPad mini平板，家用PC，公司PC，MacBook Pro各一部，能在这所有平台都同步自然是很好的简单的使用方式 收件箱+自定义文件夹(目前我定义的为 目标/工作/私人/购物 等几个分类)界面简洁，多种重复方式没有最好的工具，只有适合自己的工具，选一款适合你的工具，开始GTD吧。]]></content>
      <tags>
        <tag>todo</tag>
        <tag>growth</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[打造个人私有云]]></title>
    <url>%2F2014%2F06%2F17%2Fpersonal-cloud%2F</url>
    <content type="text"><![CDATA[这里说的私有云不是去申请服务器架设自己的云，而是利用现有的免费同步网盘来打造一个自己的云存储。 现在每个人的设备都很多，至少是公司一台电脑，家里一台电脑，还有自己的手机端，平板等，这样数据的同步就显得比较重要 网盘大战时，我也申请了很多网盘在用来整理存放自己的文件，当然不可能把所有文件每个网盘都放一份，下面是我的一些整理： SkyDrive 这个是用的最久的同步盘，从Live Mesh时就开始用，主要同步工作的数据，就是国内同步速度实在是太慢了，现在不得已只好放弃 百度云 主要用于存放电影电视剧资源，不会同步到本地，原因其一是很多资源用百度网盘共享的，其二是百度云TV版在电视上播放很方便，不过最近限速搞得人很累 360云盘 当初是网盘大战是看到容量大申请的，后来发现同步盘速度很快，而且集成在浏览器的工具栏使用很方便，用来同步个人照片和视频数据，SkyDrive中的工作数据因为同步实在太慢，也迁移过来360云盘来 新浪V盘，主要用于存放电子书，其共享的搜索功能很好，有很多电子书 (2016年6月关闭) 有道云笔记 不是网盘，主要用于记录整理文档，也是因为OneNote同步太慢转过来的 目前360云盘的目录分布如下，供参考 Dev 开发的代码，使用git本地版本库，这样版本库也会同步到其他机器上，可以随时查看历史，而且还不用到网络上申请git空间 备份 主要备份不常用的数据，用压缩包存储 个人 个人数据比如证件什么的 视频 手机或相机拍摄的视频内容 图片 手机或相机拍摄的照片 软件 常用软件，只放绿色软件，这样同步到其他机器可以直接使用 临时 存放临时文件]]></content>
      <tags>
        <tag>cloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用同步盘创建自己的代码库]]></title>
    <url>%2F2014%2F06%2F17%2Fpersonal-version-control%2F</url>
    <content type="text"><![CDATA[作为程序猿，当然会有一些自己写的代码，我一般都保存到网盘里，然后同步到各个机器中。但是渐渐发现，本地的代码没有版本，如果想回顾之前的代码，或者比较修改的地方，就非常不方便了。 这里提供一个思路，如果你不想将代码提交到网络上，但是又想保留下版本，以便回顾和比较历史代码，可以一试。 下载一个SVN的客户端软件，用SVN本地代码库，再使用网盘同步，就可以解决这个问题，分以下几步（需要有SVN使用基础）。下载一个同步盘，如 百度云同步盘,360云同步盘,Drop Box 等 下面以360云盘作为同步盘为例： 在网盘创建仓库文件夹，比如D:\YunPan\Repo文件夹，然后使用SVN的 “在此处创建仓库” 创建一个BAT，内容为subst D:\YunPan\ U: 此处是将云盘的目录虚拟到磁盘U:,这样保证每台机器都有U:盘，且内容相同 到文件夹Check Out内容，地址就写 file:///U:/Repo 这样每个网盘磁盘同步后，只要双击BAT虚拟磁盘U:，就可以签入签出代码了，速度很快且可以自动同步到其他机器]]></content>
      <tags>
        <tag>cloud</tag>
        <tag>scm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacBook Pro 使用小结]]></title>
    <url>%2F2014%2F06%2F14%2Fmacbook-pro%2F</url>
    <content type="text"><![CDATA[花血本买了个MacBook Pro装逼，到手已经三天，把玩之余，摘记使用心得如下： MacBook Pro 配置： 13英寸Retina显示屏 2.4G英特尔i5处理器 8G内存 256G闪存硬盘做开发是可以了，玩游戏是肯定不行 使用心得 Retina屏幕很爽，早在买之前先去实体店试用了几把，想买轻便的MacBook Air，最终还是被Retina屏幕折服 触摸板很强大，可以双指滚动，捏合放大缩小，三指切换应用屏幕等，操作习惯与iOS类似，操作简单方便，几乎可以不用鼠标，但是用久了手还是有点酸 Finder类似Windows的资源管理器，但是没有地址栏，略有不便 快捷键多以Command键组合其他，Command键在键盘上的位置略有不习惯 登录apple id之后，iPad上的内容比如记事本，日历，提醒，电话簿等会自动同步过来，比较方便 软件安装卸载比较方便，安装一般是将解压的app拖到Applications文件夹（一般发布的软件都会提供Applications的快捷方式），卸载也就是在将Applications的图标拖到废纸篓就可以 安装的常用软件 搜狗输入法 Parallels Desktop 9 Xcode Wunderlist Sublime Text 3 常用设置 Mac 10.9 默认排序方式是将中文排在英文前面的，设置方法为 “设置”-“语言和地区”-“列表排序顺序” 修改为 “中文简体GB2312排序” Mac 10.9 默认文件夹和文件是一起排序的，没有像Win那样将文件夹排在前面，可以下载XtraFinder，然后设置“文件夹排在前面”选项]]></content>
      <tags>
        <tag>macbook</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[几个.NET写的小工具]]></title>
    <url>%2F2014%2F06%2F09%2Fpresonal-tools%2F</url>
    <content type="text"><![CDATA[整理下之前写的几个小工具 ForceXslt Xslt测试工具 ForceRegex 正则表达式测试工具 ForceEmail 邮件发送工具 ForceXsltForceXslt是我是用C#编写的Xslt测试工具，它可以让你专注于测试某段Xpath或者Xslt的template是否有效，而不需要一遍一遍的运行整个程序去检查某段xslt是否正确。本工具提供了常用的模板，你可以轻易的修改模板达到测试XSLT代码的效果。 下载地址：http://www.caiyunlin.com/dev/ForceXslt/ForceXslt.exe ForceRegexForceRegex是我使用C#编写的正则表达式测试工具，可以让你专注于测试某段正则表达式是否有效，而不用在VS的调试器里面试来试去。类似的工具网上很多，当初写这个工具是给自己练练手，另外自己的用着顺手，一旦有啥问题还可以改改。 下载地址：http://www.caiyunlin.com/dev/ForceRegex/ForceRegex.exe ForceEmailForceEmail是我使用C#编写的邮件模板测试工具，这个小程序可以让你预先定义好邮件模板和替换符号，这样在你再次发送类似邮件的时候，只需要编写占位符的地方，然后点击发送即可调出邮件发送程序。 下载地址：http://www.caiyunlin.com/dev/ForceEmail/ForceEmail.exe]]></content>
      <categories>
        <category>技术整理</category>
      </categories>
      <tags>
        <tag>dev</tag>
        <tag>email</tag>
        <tag>regex</tag>
        <tag>xslt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[XSLT测试工具]]></title>
    <url>%2F2014%2F06%2F09%2Fdev-force-xslt%2F</url>
    <content type="text"><![CDATA[ForceXslt是我是用C#编写的Xslt测试工具，它可以让你专注于测试某段Xpath或者Xslt的template是否有效，而不需要一遍一遍的运行整个程序去检查某段xslt是否正确。本工具提供了常用的模板，你可以轻易的修改模板达到测试XSLT代码的效果。 优点 不需要打开Visual Studio即可快速测试XSLT 提供默认模板示例 单独一个exe文件，不需安装，方便携带 下载下载地址：http://www.caiyunlin.com/dev/ForceXslt/ForceXslt.exe]]></content>
      <categories>
        <category>我的软件</category>
      </categories>
      <tags>
        <tag>dev</tag>
        <tag>xslt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[邮件模板生成工具]]></title>
    <url>%2F2012%2F01%2F30%2Fdev-force-email%2F</url>
    <content type="text"><![CDATA[ForceEmail是我使用C#编写的邮件模板测试工具，这个小程序可以让你预先定义好邮件模板和替换符号，这样在你再次发送类似邮件的时候，只需要编写占位符的地方，然后点击发送即可调出邮件发送程序。 优点 支持多个模板 单独一个exe文件，不需安装，方便携带 下载下载地址：http://www.caiyunlin.com/dev/ForceEmail/ForceEmail.exe]]></content>
      <categories>
        <category>我的软件</category>
      </categories>
      <tags>
        <tag>dev</tag>
        <tag>email</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式测试工具]]></title>
    <url>%2F2011%2F10%2F10%2Fdev-force-regex%2F</url>
    <content type="text"><![CDATA[ForceRegex是我使用C#编写的正则表达式测试工具，可以让你专注于测试某段正则表达式是否有效，而不用在VS的调试器里面试来试去。类似的工具网上很多，当初写这个工具是给自己练练手，另外自己的用着顺手，一旦有啥问题还可以改改。 优点 提供常用正则表达式，方便参考 单独一个exe文件，不需安装，方便携带 下载下载地址：http://www.caiyunlin.com/dev/ForceRegex/ForceRegex.exe]]></content>
      <categories>
        <category>我的软件</category>
      </categories>
      <tags>
        <tag>dev</tag>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2008%2F04%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[世界, 您好！ 写博客的目的 研究某些新技术的时候，整理思路，备忘 在搜索引擎上找了好久才能找到的解决方法，记录下来，备忘 写过的内容如果需要分享，直接一个链接发给别人就可以，方便 博客程序历程博客没写几篇，博客程序倒腾了不少，两个字“折腾” 自创asp blog z-blog pjblog 自创php markdown blog emlog hexo wordpress hexo again]]></content>
  </entry>
  <entry>
    <title><![CDATA[技术整理]]></title>
    <url>%2Ftech.html</url>
    <content type="text"><![CDATA[算法基础整理中….. Web开发 Angular动态加载的思考 .Net开发 正则表达式测试工具 XSLT测试工具 邮件模板生成工具 .NET程序的自动更新实现 微信开发 “微信使用JSSDK分享OAuth链接的问题”}]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的胡思乱想]]></title>
    <url>%2Fthink.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[关于]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[嗨，我是蔡云林，80后程序猿 我最早学习写代码，用的是Basic，写的程序存到软盘，主机是可以插软盘的那种游戏机当代码运行，我用手柄可以控制小精灵的时候，我被这个过程深深的吸引，真是太奇妙了，从此走上了编程的不归路 毕业后我如愿以偿进入软件开发领域，至今有10年+从业经验，目前就职于一家外资企业，专注于.NET企业开发，并对前端开发也有较多涉及平时我喜欢研究编程相关的技术，写些小工具，看书，最近在研究如何写博客，属于后知后觉型的 这是我记录，思考，分享的小站，大部分整理自我的云笔记，在整理的过程中，我会尽量遵循KISS原则 我相信很多东西从根本上来说，应该是简单的，如果没有办法用简单的方式描述出来，那么可能是因为： 没有真正熟悉它 熟悉，却无法很好表达出来 我期望能借助阅读，实践得以窥探一些事物的本质，并通过书写，以尽可能简单的方式表达出来 本站主要包含以下几个方面 软件开发技术整理 读书笔记以及评论 学习方法成长思考 我开发的一些工具 我还维护了一个公众号《菜鸟微开发》，里面开发有一些有趣的小功能，欢迎关注！ 这个公众号只作为开发和测试微信功能，不会做任何图文推送，不会对你造成任何骚扰，请放心关注。 如需与我进一步联系，请发邮件至 cylin2000@163.com]]></content>
  </entry>
  <entry>
    <title><![CDATA[分类]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fnotes%2Findex.html</url>
    <content type="text"><![CDATA[菜鸟笔记你好，这里是蔡云林的开放笔记，简洁版请点击此处: http://www.caiyunlin.com/notes 分类 内容 语言 BAT / PowerShell / PHP / Python / Java / VBA Web HTML / CSS / JavaScript / NodeJs 工具 Chrome / VS Code / Sublime Text / Git 类库/框架 jQuery / Angular 1 / Vue / ReactJs 数据库 SQL / MYSQL 系统 Linux / Ubuntu / Docker 其他 MarkDown]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的阅读书单]]></title>
    <url>%2Freading%2Findex.html</url>
    <content type="text"><![CDATA[开卷有益硬技能 《代码大全》 豆瓣评分：9.3 | 读书笔记 《鸟哥的Linux私房菜》 豆瓣评分：9.1 《程序员修炼之道》 豆瓣评分：8.8 《编程珠玑》 豆瓣评分：9.2 《编程珠玑II》 豆瓣评分：8.7 《代码整洁之道》 豆瓣评分：8.5 《重构》 豆瓣评分：9.0 《JavaScript面向对象编程指南》 豆瓣评分：8.5 软技能 《如何阅读一本书》 豆瓣评分：8.5 《高效能人士的七个习惯》 豆瓣评分：8.5 《要事第一》 豆瓣评分：7.9 | 读书笔记 《搞定I：无压工作的艺术》豆瓣评分：8.7 《卓有成效的管理者》 豆瓣评分：8.8 《小强升职记》豆瓣评分：8.7 《把时间当做朋友》 豆瓣评分：8.5 《暗时间》 豆瓣评分：8.4 《软技能：代码之外的生存指南》 豆瓣评分：8.1 《影响力》 (社科版) 豆瓣评分：8.9 《番茄工作法图解》 豆瓣评分：7.7 《别告诉我你会记笔记》 豆瓣评分：6.8 《精力管理》 豆瓣评分：7.8 《穷爸爸富爸爸》 豆瓣评分：8.2 《少有人走的路》 豆瓣评分：8.3 《思考致富》 豆瓣评分：8.0 《小狗钱钱》 豆瓣评分：8.7 《意志力》 豆瓣评分：8.1 《人性的弱点》 豆瓣评分：8.3 《黑客与画家》 豆瓣评分：8.8 《拖拉一点也无妨》 豆瓣评分：7.3 《尽管去做，无压的工作艺术》 豆瓣评分：8.0 《吃掉那只青蛙》 豆瓣评分：7.3 《晨间日记的奇迹》 豆瓣评分：7.1 《刻意练习：如何从新手到大师》 豆瓣评分：8.3 《思考 快与慢》 豆瓣评分：8.2 《沟通的艺术》 豆瓣评分：8.2 《心理学与生活》 豆瓣评分：8.7 《批判性思维》 豆瓣评分：8.4 《学会提问》 豆瓣评分：8.6 《关键对话》 豆瓣评分：8.1 《谈话的力量》 豆瓣评分：8.4 《高难度谈话》 豆瓣评分：8.2 《谈判力》 豆瓣评分：7.7]]></content>
  </entry>
  <entry>
    <title><![CDATA[标签]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[angular 使用小结]]></title>
    <url>%2Fnotes%2Fangular%2Findex.html</url>
    <content type="text"><![CDATA[AngularJS 使用整理基本概念 scope - view与contorller的纽带 controller - app的行为(application behavior), controller不应该包含任何显示信息的逻辑 model - app的数据 view - 用户所看到的东东 //View中不应该包含任何行为 directives - HTML的语法扩展 filters - 根据用户的本地格式，格式化数据 injector - 加载我们的app（依赖管理之类） module - 配置injector $ - angular的命名空间（namespace） 实用方法 修改$rootScope 12345var $body = angular.element(document.body); // 1var $rootScope = $body.scope().$root; // 2$rootScope.$apply(function () &#123; // 3 $rootScope.notesconfigs.outpath = path;&#125;); 修改$scope 123var appElement = document.querySelector(&apos;[ng-controller=mainController]&apos;);//获得绑定controllerdom节点var $scope = angular.element(appElement).scope(); //获得$scope对象$scope.$apply();//刷新数据 AngularJs 获取scope 1var scope = angular.element($0).scope(); AngularJs 获取service 1234567891011121314151617var service = angular.element(&apos;html&apos;).injector().get(&apos;messageService&apos;);var $resource = angular.element(&apos;html&apos;).injector().get(&apos;$resource&apos;)var Table = $resource(&apos;/index.php/home/user/:id&apos;,&#123;id:&quot;@id&quot;&#125;,&#123;create:&#123;method:&quot;POST&quot;&#125;,update:&#123;method:&quot;PUT&quot;&#125;&#125;)//自动添加 update actionmyModule.config(function($resourceProvider) &#123; $resourceProvider.defaults.actions.update = &#123; method: &apos;PUT&apos; &#125;;&#125;);//也可以将action自动编入到url中var $resource = angular.element(&apos;html&apos;).injector().get(&apos;$resource&apos;)var Table = $resource(&apos;/index.php/home/user/:action&apos;,&#123;id:&quot;@id&quot;&#125;,&#123;create:&#123;method:&quot;POST&quot;&#125;,update:&#123;method:&quot;PUT&quot;&#125;&#125;)var user = Table.get(&#123;action:&quot;index&quot;,id:111&#125;) Service Factory Provider区别以下是service/factory/provider在angular中定义 12345678910function factory(name, factoryFn) &#123; return provider(name, &#123; $get: factoryFn &#125;); &#125; function service(name, constructor) &#123; return factory(name, [&apos;$injector&apos;, function($injector) &#123; return $injector.instantiate(constructor); &#125;]);&#125; 以下是一个例子，展示了一个service和一个factory如何完成相同的事情：12345678910111213var app = angular.module(&apos;app&apos;,[]);app.service(&apos;helloWorldService&apos;, function()&#123; this.hello = function() &#123; return &quot;Hello World&quot;; &#125;;&#125;);app.factory(&apos;helloWorldFactory&apos;, function()&#123; return &#123; hello: function() &#123; return &quot;Hello World&quot;; &#125; &#125;&#125;); Angularjs BindCompiledHTML1234567891011121314151617181920212223242526app .directive(&apos;ngBindCompiledHtml&apos;, function ($compile) &#123; &apos;use strict&apos;; return &#123; template: &apos;&lt;div&gt;&lt;/div&gt;&apos;, scope: &#123; rawHtml: &apos;=ngBindCompiledHtml&apos; &#125;, link: function (scope, elem, attrs) &#123; scope.$watch(&apos;rawHtml&apos;, function (value) &#123; if (!value) &#123; return; &#125; // we want to use the scope OUTSIDE of this directive // (which itself is an isolate scope). var newElem = $compile($.parseHTML(value))(scope.$parent); elem.contents().remove(); elem.append(newElem); &#125;); &#125; &#125;;&#125;); angular 动态加载AngularJS按需动态加载template和controller? - 知乎https://www.zhihu.com/question/30624377 AngualrJS == gulp 合并所有文件，前台一次加载http://echizen.github.io/tech/2015/08-10-build-web-app GitHub - GrumpyWizards/ngDynamicRouting: 1 route, many views (自定义自动加载)https://github.com/GrumpyWizards/ngDynamicRouting 提供一个states列表，然后遍历注入angular.forEach(states, function(state) { $stateProvider.state(‘/‘ + state, { url: ‘/‘ + state, templateUrl: ‘views/‘ + state + ‘.html’, controller: state + ‘Controller’ }) ;}) 小项目，每个写一个文件services.jsdirectives.jscontrollers.js AngularJS with EasyUIYou will have to custom a directive to achieve this functionality. The code below shows a ‘easyuiTextbox’ directive.Code:1234567891011121314151617var app = angular.module(&apos;myapp&apos;, []);app.directive(&apos;easyuiTextbox&apos;, function()&#123; return &#123; restrict: &apos;AE&apos;, require:&apos;ngModel&apos;, link: function(scope, elem, attrs, ngModel)&#123; $(elem).textbox().textbox(&apos;textbox&apos;).bind(&apos;blur&apos;, function()&#123; scope.$apply(function()&#123; ngModel.$setViewValue($(elem).textbox(&apos;getValue&apos;)); &#125;) &#125;); ngModel.$render = function(value)&#123; $(elem).textbox(&apos;setValue&apos;, ngModel.$viewValue); &#125; &#125; &#125;&#125;) Usage example:Code:1234&lt;body ng-app=&quot;myapp&quot;&gt; &lt;input ng-model=&quot;value&quot;&gt; &lt;input easyui-textbox ng-model=&quot;value&quot; data-options=&quot;required:true&quot;&gt;&lt;/input&gt;&lt;/body&gt; AngularJS登出检测12345678910111213angular.module(&apos;myApp&apos;, []).run(function($rootScope, AuthService) &#123; $rootScope.$on(&apos;$routeChangeStart&apos;, function(evt, next, current) &#123; // 如果用户未登录 if (!AuthService.userLoggedIn()) &#123; if (next.templateUrl === &quot;login.html&quot;) &#123; // 已经转向登录路由因此无需重定向 &#125; else &#123; $location.path(&apos;/login&apos;); &#125; &#125; &#125;);&#125;); 参考资源 Angular JS + jqgrid Angular动态表单 Angular动态表单 Contrller和Directives调用 Directive详解 AngularJS开发人员常犯的错误 注意点 ng-开头的指令为AngularJS内置的指令，自己开发的指令尽量不用用这个前缀 controller命名尽量写全，如 HomeController 而不是 HomeCtrl]]></content>
  </entry>
  <entry>
    <title><![CDATA[bat 使用小结]]></title>
    <url>%2Fnotes%2Fbat%2Findex.html</url>
    <content type="text"><![CDATA[BAT 常用命令整理简介BAT是Windows下的批处理语言，只要用文本编辑器如notepad编辑脚本，并且保存为.bat文件或者.cmd文件，双击该文件即可执行脚本。 参数传递使用命令行传递参数给批处理命令时，如 p1 p2 ``` , 可以使用%1 %2 等获取到参数12 rem %1为第一个参数，%2为第二个参数echo %1echo %212## 使用变量变量需要用%%括起来AC set version=1.0echo %version%AC12## 得到当前目录 for %% in (.) do set CurrDirName=%%~nxecho %CurrDirName%12## 判断目录是否存在 if exist c:\tempfolder ( echo “文件夹已存在”) else ( echo “创建文件夹” md c:\tempfolder)12## 设置无线网路共享 netsh wl set hos m=a s=vWiFi k=1234567890netsh wl sta hosnetsh wl sto hos12## 设置代理 SET HTTP_PROXY=http://www.proxyserver.com:8080SET HTTPS_PROXY=http://www.proxyserver.com:808012## 实现 CHOICE 选项菜单 ECHO OFFCLS:MENU ECHO. ECHO ……………………………………….. ECHO PRESS 1, 2 OR 3 to select your task, or 4 to EXIT. ECHO ……………………………………….. ECHO. ECHO 1 - Open Notepad ECHO 2 - Open Calculator ECHO 3 - Open Notepad AND Calculator ECHO 4 - EXIT ECHO. SET /P M=Type 1, 2, 3, or 4 then press ENTER: IF %M%==1 GOTO NOTE IF %M%==2 GOTO CALC IF %M%==3 GOTO BOTH IF %M%==4 GOTO EOF:NOTE cd %windir%\system32\notepad.exe start notepad.exe GOTO MENU:CALC cd %windir%\system32\calc.exe start calc.exe GOTO MENU:BOTH cd %windir%\system32\notepad.exe start notepad.exe cd %windir%\system32\calc.exe start calc.exe GOTO MENU1234## 分支使用分支不可以断行写，可以用goto命令实现多行 @echo offset server=%1if %server%==PRODUCTION (goto PRODUCTION) else (goto SANDBOX):PRODUCTION echo PRODUCTION goto end:SANDBOX echo SANDBOX goto end:end1## 得到时间戳 @echo offFor /f “tokens=2-4 delims=/ “ %%a in (‘date /t’) do (set mydate=%%c-%%a-%%b)set hour=%time:~,2%if “%time:~,1%”==” “ set hour=0%time:~1,1%set DateTimeNow=%mydate%-%hour%%time:~3,2%12## 设置执行路径为bat所在目录 cd %~dp01或者 for %%i in (%0) do set aa=%%~dpicd /d %aa%1## 调用net命令 net use \servername /deletenet use \servername password /user:username12## 远程关机重启 rem 使用 shutdownshutdown -m \\ipaddress -r -c “remote restart” -f rem 使用psshutdownpsshutdown -m \\ipaddress -r -f -u username -p password1234## 清理版本控制软件的生成文件如果要清理一个目录的版本控制软件生成文件，可以将下面文本保存成bat，在目标文件夹内执行 @ECHO OFF@echo ===================================================================@echo 清除svn,vss,cvs标记文件@echo filename : clearSvnCvsVss.bat@echo ===================================================================@ECHO 按Ctrl + C取消。@pause@echo 执行批处理：%0 %1 %2 %3@echo 转到：%1cd /d %1 @echo (1)开始清除.SVN文件夹@rem for /r %%d in (.) do if exist “%%d.svn” echo /s /q “%%d.svn”@for /r %%d in (.) do if exist “%%d.svn” rd /s /q “%%d.svn” @echo (2)开始清除CVS标记@for /r %%d in (.) do if exist “%%d\CVS\Root” rd /s/q “%%d\CVS” @echo (3)开始清除vssver.scc和vssver2.scc文件attrib -s -h -r -a vssver?.scc /sfor /r . %%i in (vssver?.scc) do if exist %%i del %%i @echo (4)开始清除VisualStudio中的VSS标记文件attrib -s -h -r -a .vssscc /sattrib -s -h -r -a .csproj.vspscc /s for /r . %%i in (.vssscc) do if exist %%i del %%ifor /r . %%i in (.csproj.vspscc) do if exist %%i del %%i @echo 删除完后请检查是否清楚干净。考虑不同的编码工具带有自己的特殊标志，可根据具体情况修改批处理文件中的命令行。pauseexit`]]></content>
  </entry>
  <entry>
    <title><![CDATA[chrome 使用小结]]></title>
    <url>%2Fnotes%2Fchrome%2Findex.html</url>
    <content type="text"><![CDATA[Chrome 使用整理本地跨域方法，创建如下快捷方式1&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot; --allow-file-access-from-files]]></content>
  </entry>
  <entry>
    <title><![CDATA[css 使用小结]]></title>
    <url>%2Fnotes%2Fcss%2Findex.html</url>
    <content type="text"><![CDATA[CSS使用整理]]></content>
  </entry>
  <entry>
    <title><![CDATA[docker 使用小结]]></title>
    <url>%2Fnotes%2Fdocker%2Findex.html</url>
    <content type="text"><![CDATA[Docker使用参考简介安装Windowshttps://www.docker.com/docker-windows Ubuntuhttps://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#uninstall-old-versions Uninstall Old Docker 1sudo apt-get remove docker docker-engine docker.io Update APT-GET Repository 1sudo apt-get update Install packages to allow apt to use a repository over HTTPS: 1sudo apt-get install apt-transport-https ca-certificates curl software-properties-common Add Docker’s official GPG key: 12curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -sudo apt-key fingerprint 0EBFCD88 Set Repository 1234sudo add-apt-repository \ &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) \ stable&quot; Install Docker 12sudo apt-get updatesudo apt-get install docker-ce Run Docker 1234567891011121314151617# 运行docker hello-worldsudo docker run hello-world# 构建一个docker imagesudo docker build -f dockerfile-receiver# 运行一个docker 服务器，重定向9080端口到nginx80端口sudo docker run -p 9080:80 nginx# 运行nginx，将输出转移到控制台sudo docker run -it 9080:80 nginx# 查看Docker正在运行的进程sudo docker ps# 进入某个进程docker exec -it 68067442d2f9 /bin/bash 命令1234docker run hello-worlddocker build -f dockerfile-receiverdocker run -p 9080:80 nginxdocker run -it 9080:80 nginx 参考资料http://dockone.io/article/101]]></content>
  </entry>
  <entry>
    <title><![CDATA[git 使用小结]]></title>
    <url>%2Fnotes%2Fgit%2Findex.html</url>
    <content type="text"><![CDATA[GIT 常用命令Git Clone 慢的解决办法git config –global http.postBuffer 524288000 创建仓库的两种方法1234# 本地初始化git init# 克隆远程仓库git clone https://github.com/cylin2000/theone.git 切换branch1git checkout branchname 添加查看远程仓库1234git remotegit remote -vgit pull --rebase origin master 强制覆盖本地文件12git reset --hardgit pull 永久删除文件(包括历史记录)http://www.cnblogs.com/shines77/p/3460274.html 参考教程 作者 来源 Git官方 Pro Git 中文版教程 Atlassian Git Tutorials]]></content>
  </entry>
  <entry>
    <title><![CDATA[html 使用小结]]></title>
    <url>%2Fnotes%2Fhtml%2Findex.html</url>
    <content type="text"><![CDATA[HTML 常用代码HTML5 模板1234567891011&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"&gt; &lt;title&gt;Html Demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[index 使用小结]]></title>
    <url>%2Fnotes%2Findex%2Findex.html</url>
    <content type="text"><![CDATA[菜鸟笔记你好，这里是蔡云林的开放笔记，采用了editor显示markdown文件. 分类 内容 语言 BAT / PowerShell / PHP / Python / Java / VBA Web HTML / CSS / JavaScript / NodeJs 工具 Chrome / VS Code / Sublime Text / Git 类库/框架 jQuery / Angular 1 / Vue / ReactJs 数据库 SQL / MYSQL 系统 Linux / Ubuntu / Docker 其他 MarkDown]]></content>
  </entry>
  <entry>
    <title><![CDATA[java 使用小结]]></title>
    <url>%2Fnotes%2Fjava%2Findex.html</url>
    <content type="text"><![CDATA[Java使用整理Java开发环境准备 JRE http://www.java.com/en/ JDK http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html intellij https://www.jetbrains.com/idea/ 下载开源社区版本的IntelliJ New to Java http://www.oracle.com/technetwork/topics/newtojava/overview/index.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[javascript 使用小结]]></title>
    <url>%2Fnotes%2Fjavascript%2Findex.html</url>
    <content type="text"><![CDATA[Javascript常用技巧Javascript for 循环1234for (var i=0;i&lt;cars.length;i++)&#123; document.write(cars[i] + "&lt;br&gt;");&#125; Javascript 严格模式严格模式详解 : http://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html 1234(function()&#123;&apos;use strict&apos;; //不可出现undefined的变量,变量需要提前定义&#125;)(); Javascript 格式化 JSON1TODO Javascript 调用后退功能JavaScript触发浏览器的后退功能，最常用的方法是 1window.history.back(); 项目使用中，可能需要后退并且刷新界面，这时候可以使用document.referrer,就是上一个页面的地址，window.location.href就是设置当前地址,示例如下1window.location.href=document.referrer; Javascript 格式化XML1234567891011121314151617181920212223242526272829303132function formatXml(xml) &#123; var formatted = &apos;&apos;; var reg = /(&gt;)(&lt;)(\/*)/g; xml = xml.replace(reg, &apos;$1\r\n$2$3&apos;); var pad = 0; jQuery.each(xml.split(&apos;\r\n&apos;), function(index, node) &#123; var indent = 0; if (node.match( /.+&lt;\/\w[^&gt;]*&gt;$/ )) &#123; indent = 0; &#125; else if (node.match( /^&lt;\/\w/ )) &#123; if (pad != 0) &#123; pad -= 1; &#125; &#125; else if (node.match( /^&lt;\w[^&gt;]*[^\/]&gt;.*$/ )) &#123; indent = 1; &#125; else &#123; indent = 0; &#125; var padding = &apos;&apos;; for (var i = 0; i &lt; pad; i++) &#123; padding += &apos; &apos;; &#125; formatted += padding + node + &apos;\r\n&apos;; pad += indent; &#125;); reg = /&lt;(\w*)&gt;\r\n *?&lt;\//g formatted = formatted.replace(reg,&apos;&lt;$1&gt;&lt;\/&apos;); return formatted; &#125; javascript 删除数组元素123456789101112131415161718192021222324252627282930313233343536373839404142//直接使用splicevar arr = [&apos;aa&apos;,&apos;bb&apos;,&apos;cc&apos;,&apos;dd&apos;]arr.splice(2,1) //从第3个元素开始，移除1个元素 cc 被移除console.log(arr)/* 方法:Array.remove(dx) * 功能:删除数组元素. * 参数:dx删除元素的下标. * 返回:在原数组上修改数组 *///经常用的是通过遍历,重构数组.Array.prototype.remove=function(dx)&#123; if(isNaN(dx)||dx&gt;this.length)&#123;return false;&#125; for(var i=0,n=0;i&lt;this.length;i++) &#123; if(this[i]!=this[dx]) &#123; this[n++]=this[i] &#125; &#125; this.length-=1&#125; //在数组中获取指定值的元素索引Array.prototype.getIndexByValue= function(value)&#123; var index = -1; for (var i = 0; i &lt; this.length; i++) &#123; if (this[i] == value) &#123; index = i; break; &#125; &#125; return index;&#125;//使用举例a = [&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;];var dx=a.getIndexByValue（&quot;2&quot;);a.remove(dx); //删除下标为dx的元素 Javascript 判断数组是否包含元素123456789function inArray(e,arr) &#123; for(var i=0;i&lt;arr.length;i++) &#123; if(arr[i] == e) return true; &#125; return false; &#125; Javascript 克隆对象使用JSON1JSON.parse(JSON.stringify(o)); 使用jQuery12345// Shallow copyvar newObject = jQuery.extend(&#123;&#125;, oldObject);// Deep copyvar newObject = jQuery.extend(true, &#123;&#125;, oldObject); 注意 jQuery.clone() 只用于dom元素]]></content>
  </entry>
  <entry>
    <title><![CDATA[jquery 使用小结]]></title>
    <url>%2Fnotes%2Fjquery%2Findex.html</url>
    <content type="text"><![CDATA[jQuery常用整理获取表单的值12345var data = $(&quot;#form_id&quot;).serialize();或者 var data = $(&quot;#form_id&quot;).serializeArray(); Ajax调用后台1234567891011121314//jquery使用ajax的方法var data = $(&quot;#form_id&quot;).serialize();$.ajax(&#123; type:&apos;post&apos;, url:&apos;post.php?xx=xx&apos;, data:data, cache:false, async:false, dataType:&apos;json&apos;, success:function(result)&#123; &#125;, error:function(err)&#123; &#125; &#125;); 给jQuery增加format功能123456789101112131415161718$.format = function(source, params) &#123; if (arguments.length == 1) return function() &#123; var args = $.makeArray(arguments); args.unshift(source); return $.format.apply(this, args); &#125;; if (arguments.length &gt; 2 &amp;&amp; params.constructor != Array) &#123; params = $.makeArray(arguments).slice(1); &#125; if (params.constructor != Array) &#123; params = [params]; &#125; $.each(params, function(i, n) &#123; source = source.replace(new RegExp(&quot;\\&#123;&quot; + i + &quot;\\&#125;&quot;, &quot;g&quot;), n); &#125;); return source;&#125;; jquery 清除已绑定的事件1$(&quot;#id&quot;).unbind(&apos;click&apos;);]]></content>
  </entry>
  <entry>
    <title><![CDATA[markdown 使用小结]]></title>
    <url>%2Fnotes%2Fmarkdown%2Findex.html</url>
    <content type="text"><![CDATA[Editor.md 目录 (Table of Contents) [TOCM] Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6Heading 1 link Heading linkHeading 2 link Heading linkHeading 3 link Heading linkHeading 4 link Heading link Heading link Heading linkHeading 5 link Heading linkHeading 6 link Heading link标题（用底线的形式）Heading (underline)This is an H1This is an H2字符效果和横线等 删除线 删除线（开启识别HTML标签时）斜体字 斜体字粗体 粗体粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接 普通链接带标题 直接链接：https://github.com 锚点链接 mailto:test.test@gmail.com GFM a-tail link @pandao 邮箱地址自动链接 test.test@gmail.com www@vip.qq.com @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似 &lt;pre&gt; 预格式化文本 ( Preformatted Text ) 的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt; 预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | JS代码 123456789101112131415161718192021222324252627282930313233343536function test() &#123; console.log("Hello world!");&#125; (function()&#123; var box = function() &#123; return box.fn.init(); &#125;; box.prototype = box.fn = &#123; init : function()&#123; console.log('box.init()'); return this; &#125;, add : function(str) &#123; alert("add", str); return this; &#125;, remove : function(str) &#123; alert("remove", str); return this; &#125; &#125;; box.fn.init.prototype = box.fn; window.box =box;&#125;)();var testBox = box();testBox.add("jQuery").remove("jQuery"); HTML 代码 HTML codes1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;mate charest="utf-8" /&gt; &lt;meta name="keywords" content="Editor.md, Markdown, Editor" /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;style type="text/css"&gt; body&#123;font-size:14px;color:#444;font-family: "Microsoft Yahei", Tahoma, "Hiragino Sans GB", Arial;background:#fff;&#125; ul&#123;list-style: none;&#125; img&#123;border:none;vertical-align: middle;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 class="text-xxl"&gt;Hello world!&lt;/h1&gt; &lt;p class="text-green"&gt;Plain text&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 图片 ImagesImage: Follow your heart. 图为：厦门白城沙滩 图片加链接 (Image + Link)： 图为：李健首张专辑《似水流年》封面 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list GFM task list 1 GFM task list 2 GFM task list 3 GFM task list 3-1 GFM task list 3-2 GFM task list 3-3 GFM task list 4 GFM task list 4-1 GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes© &amp; ¨ ™ ¡ £&amp; &lt; &gt; ¥ € ® ± ¶ § ¦ ¯ « · X² Y³ ¾ ¼ × ÷ » 18ºC “ ‘ [========] Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [ ] :smiley: this is a complete item :smiley:; []this is an incomplete item test link :fa-star: @pandao; [ ]this is an incomplete item :fa-star: :fa-gear:; :smiley: this is an incomplete item test link :fa-star: :fa-gear:; :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* [========] 科学公式 TeX(KaTeX)$$E=mc^2$$ 行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。 $$x &gt; y$$ $$(\sqrt{3x-1}+(1+x)^2)$$ $$\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))$$ 多行公式： 12345\displaystyle\left( \sum\_&#123;k=1&#125;^n a\_k b\_k \right)^2\leq\left( \sum\_&#123;k=1&#125;^n a\_k^2 \right)\left( \sum\_&#123;k=1&#125;^n b\_k^2 \right) 123456789\displaystyle \frac&#123;1&#125;&#123; \Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123; \frac25 \pi&#125;&#125; = 1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123; 1+\frac&#123;e^&#123;-6\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\cdots&#125; &#125; &#125; &#125; 123f(x) = \int_&#123;-\infty&#125;^\infty \hat f(\xi)\,e^&#123;2 \pi i \xi x&#125; \,d\xi 分页符 Page break Print Test: Ctrl + P [========] 绘制流程图 Flowchart12345678st=&gt;start: 用户登陆op=&gt;operation: 登陆操作cond=&gt;condition: 登陆成功 Yes or No?e=&gt;end: 进入后台st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op [========] 绘制序列图 Sequence Diagram1234Andrew-&gt;China: Says Hello Note right of China: China thinks\nabout it China--&gt;Andrew: How are you? Andrew-&gt;&gt;China: I am good thanks! End]]></content>
  </entry>
  <entry>
    <title><![CDATA[mysql 使用小结]]></title>
    <url>%2Fnotes%2Fmysql%2Findex.html</url>
    <content type="text"><![CDATA[MYSQL安装版本选择 phpmyadmin登陆时，出现验证方式错误安装 mysql-installer-community-5.6.41.0.msi 版本 不会出现认证方式和utf-8默认编码的问题 错误排查 mysql communitity 版本 安装完成后每天弹出如下错误：1234567891011===================== Start Initialization ==================== MySQL Installer is running in Community mode. Initializing product requirements Loading product catalog Checking for product catalog snippetsChecking for product packages in the bundleCategorizing product catalogFinding all installed packages.Your product catalog was last updated at 2016/3/24 15:16:17===================== End Initialization ======================= Unable to connect to remote host. Catalog download has failed. 解决方法： 先关闭错误框 &gt; 控制面板 &gt; 管理工具 &gt; 任务计划程序 &gt; （展开并找到Mysql的定时Installer） &gt; 右键 &gt; 禁用]]></content>
  </entry>
  <entry>
    <title><![CDATA[nodejs 使用小结]]></title>
    <url>%2Fnotes%2Fnodejs%2Findex.html</url>
    <content type="text"><![CDATA[NodeJS 使用总结NPM 设置国内源/代理123456789101112# 设置源npm config set registry http://registry.cnpmjs.orgnpm info underscore# 设置代理npm config set proxy http://username:password@server:portnpm confit set https-proxy http://username:password@server:port# 默认的源npm config set registry https://registry.npmjs.org# 取消代理npm config delete proxynpm config delete https-proxy node js 获取用户名密码1234567891011121314var auth = req.headers[&apos;authorization&apos;]; // auth is in base64(username:password) so we need to decode the base64 console.log(&quot;Authorization Header is: &quot;, auth); var username=&apos;&apos;; var password=&apos;&apos; if(auth) &#123; var tmp = auth.split(&apos; &apos;); // Split on a space, the original auth looks like &quot;Basic Y2hhcmxlczoxMjM0NQ==&quot; and we need the 2nd part var buf = new Buffer(tmp[1], &apos;base64&apos;); // create a buffer and tell it the data coming in is base64 var plain_auth = buf.toString(); // read it back out as a string console.log(&quot;Decoded Authorization &quot;, plain_auth); var creds = plain_auth.split(&apos;:&apos;); username = creds[0]; password = creds[1]; &#125; 安装HEXOnpm install hexo-cli -g]]></content>
  </entry>
  <entry>
    <title><![CDATA[php 使用小结]]></title>
    <url>%2Fnotes%2Fphp%2Findex.html</url>
    <content type="text"><![CDATA[PHP 常用代码整理PHP XML to Object1234567//php输出对象print_r($obj);//php读取xml$xml=&quot;&lt;root&gt;&lt;/root&gt;&quot;;$doc = simplexml_load_string($xml);//php转换json 和 php对象$obj = json_decode(json_encode($doc),TRUE); 其他一些代码 基本都不能正常工作，留着备用12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091//TODO:有问题不能和 xml_to_array互转 没能解决/*function array_to_xml($data,$root=&quot;root&quot;)&#123; $xml_data = new \SimpleXMLElement(&apos;&lt;root&gt;&lt;/root&gt;&apos;); _array_to_xml($data,$xml_data); return $xml_data-&gt;asXML();&#125;function _array_to_xml($data, &amp;$xml_data ) &#123; foreach( $data as $key =&gt; $value ) &#123; if( is_numeric($key) )&#123; $key = &apos;item&apos;.$key; //dealing with &lt;0/&gt;..&lt;n/&gt; issues &#125; if( is_array($value) ) &#123; $subnode = $xml_data-&gt;addChild($key); _array_to_xml($value, $subnode); &#125; else &#123; $xml_data-&gt;addChild(&quot;$key&quot;,htmlspecialchars(&quot;$value&quot;)); &#125; &#125;&#125;*/function xml_to_array($string)&#123; $xml = simplexml_load_string($string, &apos;SimpleXMLElement&apos;, LIBXML_NOCDATA); return json_decode(json_encode((array)$xml), TRUE);&#125;function xml_encode($data, $charset = &apos;utf-8&apos;, $root = &apos;root&apos;) &#123; $xml = &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;&apos; . $charset .&apos;&quot;?&gt;&apos;; $xml .= &quot;&lt;&#123;$root&#125;&gt;&quot;; $xml .= array_to_xml($data); $xml .= &quot;&lt;/&#123;$root&#125;&gt;&quot;; return $xml;&#125;function xml_decode($xml, $root = &apos;root&apos;) &#123; $search = &apos;/&lt;(&apos; . $root . &apos;)&gt;(.*)&lt;\/\s*?\\1\s*?&gt;/s&apos;; $array = array(); if(preg_match($search, $xml, $matches))&#123; $array = xml_to_array($matches[2]); &#125; return $array;&#125;function array_to_xml($array) &#123; if(is_object($array))&#123; $array = get_object_vars($array); &#125; $xml = &apos;&apos;; foreach($array as $key =&gt; $value)&#123; $_tag = $key; $_id = null; if(is_numeric($key))&#123; $_tag = &apos;item&apos;; $_id = &apos; id=&quot;&apos; . $key . &apos;&quot;&apos;; &#125; $xml .= &quot;&lt;&#123;$_tag&#125;&#123;$_id&#125;&gt;&quot;; $xml .= (is_array($value) || is_object($value)) ? array_to_xml($value) : htmlentities($value); $xml .= &quot;&lt;/&#123;$_tag&#125;&gt;&quot;; &#125; return $xml;&#125;function arrToXml($arr, $dom = 0, $item = 0) &#123; if (!$dom) &#123; $dom = new \DOMDocument(&apos;1.0&apos;,&apos;utf-8&apos;); &#125; if (!$item) &#123; $item = $dom-&gt;createElement(&quot;DOCUMENT&quot;); $dom-&gt;appendChild($item); &#125; foreach ($arr as $key =&gt; $val) &#123; if (is_string($key)) &#123; $itemx = $dom-&gt;createElement($key); $item-&gt;appendChild($itemx); &#125; if (!is_array($val)) &#123; $text = $dom-&gt;createCDATASection($val); $itemx-&gt;appendChild($text); &#125; else &#123; if (is_numeric($key)) &#123; arrToXml($val, $dom, $item); &#125; else &#123; arrToXml($val, $dom, $itemx); &#125; &#125; &#125; return $dom-&gt;saveXML();&#125; PHP之道http://laravel-china.github.io/php-the-right-way/ PHP内置服务器http://php.net/features.commandline.webserver PHP最简LOGIN12345678910111213141516171819202122&lt;?php //开启SESSIONsession_start();/* 最简登陆模块，直接拷贝本段放到php引导文件即可*/if(!isset($_SESSION["super_user"]))&#123; $password = isset($_POST["password"])?$_POST["password"]:""; if($password == "8888")&#123; $_SESSION["super_user"] = TRUE; header("location:.?"); &#125; else&#123; echo "&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;center&gt; &lt;form action='?' method='post'&gt;Password:&lt;input name='password' type='password'/&gt; &lt;input type='submit' value='Submit'/&gt; &lt;/form&gt; &lt;/center&gt;"; die(); &#125;&#125;?&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[powershell 使用小结]]></title>
    <url>%2Fnotes%2Fpowershell%2Findex.html</url>
    <content type="text"><![CDATA[PowerShell常用脚本整理简介Windows PowerShell 是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用 .NET Framework的强大功能。 设置 PowerShell 执行策略默认PowerShell是不可以直接运行用户自定义的ps1文件的，可以运行下面的命令开启用户脚本执行权限1Set-ExecutionPolicy ByPass PowerShell 远程调用12345678910$scripts = &#123; dir&#125;$c = Get-Credential$server = &quot;remote.server.address&quot;winrm s winrm/config/client &apos;@&#123;TrustedHosts=&quot;$server&quot;&#125;&apos;Invoke-Command -Script $scripts -Computer $server -Credential $c PowerShell 获得当前脚本路径在ps1脚本里面执行下面语句，可以得到当前脚本的路径，在PowerShell命令行直接输入无效1$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition PowerShell 进度条1for ($I = 1; $I -le 100; $I++ ) &#123;Write-Progress -Activity &quot;Deployment in Progress&quot; -Status &quot;$I% Complete:&quot; -PercentComplete $I;&#125; PowerShell 数组操作123456# 数组可以是不同类型$myArray = 'Hello', 12, (Get-Date), $null, $true# 数组可以用区间快速取值$myArray = $myArray[0..2]# 可以用负数表示从后面开始取值$latest = $myArray[-1] PowerShell 下载http/https文件123456789101112 function Get-File($source,$destination)&#123; [Net.ServicePointManager]::ServerCertificateValidationCallback = &#123;$true&#125; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 $wc = New-Object System.Net.WebClient $destinationFolder = Split-Path -Parent $destination if(!(Test-Path($destinationFolder)))&#123; md $destinationFolder | Out-Null &#125; $source = $source.Replace('\','/') Write-Host "Downloading File $source" $wc.DownloadFile($source,$destination) &#125; PowerShell 设置环境变量12 PowerShell BizTalk 相关脚本function write-WarnMessage([string]$message) &#123; Write-Host $(Get-Date) $message -ForegroundColor Yellow&#125;function write-SucessMessage([string]$message) &#123; Write-Host $(Get-Date) $message -ForegroundColor Green&#125;function write-InfoMessage([string]$message) &#123; Write-Host $(Get-Date) $message -ForegroundColor Blue -BackgroundColor White&#125;function write-ErrorMessage ([string]$message) &#123; Write-Host $(Get-Date) $message -ForegroundColor Red&#125;# Gets the execution directoryfunction Get-ScriptDirectory &#123; $Invocation = (Get-Variable MyInvocation -Scope 1).Value Split-Path $Invocation.MyCommand.Path&#125;function Delete-Bts-Receive-Handler ( [string]$adapter, [string]$hostName )&#123; try &#123; [System.Management.ManagementObject]$objHandler = get-wmiobject &apos;MSBTS_ReceiveHandler&apos; -namespace &apos;root\MicrosoftBizTalkServer&apos; -filter &quot;HostName=&apos;$hostName&apos; AND AdapterName=&apos;$adapter&apos;&quot; $objHandler.Delete() write-SucessMessage &quot;Deleted $adapter receive handler for $hostName&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; if ($_.Exception.Message -eq &quot;You cannot call a method on a null-valued expression.&quot;) &#123; write-WarnMessage &quot;$adapter receive handler for $hostName does not exist&quot; &#125; elseif ($_.Exception.Message.IndexOf(&quot;Cannot delete a receive handler that is used by&quot;) -ne -1) &#123; write-WarnMessage &quot;$adapter receive handler for $hostName is in use. Cannot delete.&quot; &#125; else &#123; write-Error &quot;$adapter receive handler for $hostName could not be deleted: $_.Exception.ToString()&quot; &#125; &#125;&#125;function Delete-Bts-Send-Handler ( [string]$adapter, [string]$hostName )&#123; try &#123; [System.Management.ManagementObject]$objHandler = get-wmiobject &apos;MSBTS_SendHandler2&apos; -namespace &apos;root\MicrosoftBizTalkServer&apos; -filter &quot;HostName=&apos;$hostName&apos; AND AdapterName=&apos;$adapter&apos;&quot; $objHandler.Delete() write-SucessMessage &quot;Deleted $adapter send handler for $hostName&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; if ($_.Exception.Message -eq &quot;You cannot call a method on a null-valued expression.&quot;) &#123; write-WarnMessage &quot;$adapter send handler for $hostName does not exist&quot; &#125; elseif ($_.Exception.Message.IndexOf(&quot;Cannot delete a send handler that is used by&quot;) -ne -1) &#123; write-WarnMessage &quot;$adapter send handler for $hostName is in use. Cannot delete.&quot; &#125; else &#123; write-Error &quot;$adapter send handler for $hostName could not be deleted: $_.Exception.ToString()&quot; &#125; &#125;&#125;function Delete-Bts-Instance( [string]$hostName, [string]$Server )&#123; try &#123; # Unintall [System.Management.ManagementObject]$objHostInstance = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_HostInstance&quot;).CreateInstance() $name = &quot;Microsoft BizTalk Server &quot; + $hostName + &quot; &quot; + $Server $objHostInstance[&quot;Name&quot;] = $name $objHostInstance.Uninstall() # Unmap [System.Management.ManagementObject]$objServerHost = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_ServerHost&quot;).CreateInstance() $objServerHost[&quot;HostName&quot;] = $hostName $objServerHost[&quot;ServerName&quot;] = $Server $objServerHost.Unmap() write-SucessMessage &quot;Deleted host instance for $hostName on $Server&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;$hostName host instance on server $Server could not be deleted: $_.Exception.ToString()&quot; &#125;&#125;function Stop-Bts-HostInstance ( [string] $HostName, [string] $Server )&#123; try &#123; $filter = &quot;HostName = &apos;&quot; + $HostName + &quot;&apos; and RunningServer = &apos;&quot; + $Server + &quot;&apos;&quot; $HostInstance = get-wmiobject &quot;MSBTS_HostInstance&quot; -namespace &quot;root\MicrosoftBizTalkServer&quot; -filter $filter $HostInstanceState = $HostInstance.GetState().State write-InfoMessage &quot;Current state of $HostName instance on server $Server : $HostInstanceState (1=Stopped, 2=Start pending, 3=Stop pending, 4=Running, 8=Unknown)&quot; if ($HostInstanceState -eq 4) &#123; $HostInstance.Stop() $HostInstanceState = $HostInstance.GetState().State write-SucessMessage &quot;New state of $HostName instance on server $Server: $HostInstanceState (1=Stopped, 2=Start pending, 3=Stop pending, 4=Running, 8=Unknown)&quot; &#125; else &#123; $HostInstanceState = $HostInstance.GetState().State write-WarnMessage &quot;Failed to stop host instance $HostName on server $Server because host instance state $HostInstanceState was not the expected value of 4 (running)&quot; &#125; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;$hostName host instance could not be stopped on $Server : $_.Exception.ToString()&quot; &#125;&#125;function Delete-Bts-Host ( [string]$hostName )&#123; # TODO: This only works intermittently try &#123; [System.Management.ManagementObject]$objHostSetting = get-wmiobject &apos;MSBTS_HostSetting&apos; -namespace &apos;root\MicrosoftBizTalkServer&apos; -filter &quot;HostName=&apos;$hostName&apos;&quot; $objHostSetting.Delete() write-SucessMessage &quot;Deleted host $hostName&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;$hostName host could not be deleted: $_.Exception.ToString()&quot; &#125;&#125;# function to create BizTalk hostfunction Create-Bts-Host( [string]$hostName, [int]$hostType, [string]$ntGroupName, [bool]$authTrusted, [bool]$tracking, [bool]$32BitOnly)&#123; try &#123; [System.Management.ManagementObject]$objHostSetting = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_HostSetting&quot;).CreateInstance() $objHostSetting[&quot;Name&quot;] = $hostName $objHostSetting[&quot;HostType&quot;] = $hostType $objHostSetting[&quot;NTGroupName&quot;] = $NTGroupName $objHostSetting[&quot;AuthTrusted&quot;] = $authTrusted $objHostSetting[&quot;IsHost32BitOnly&quot;] = $32BitOnly $objHostSetting[&quot;HostTracking&quot;] = $tracking $putOptions = new-Object System.Management.PutOptions $putOptions.Type = [System.Management.PutType]::CreateOnly; [Type[]] $targetTypes = New-Object System.Type[] 1 $targetTypes[0] = $putOptions.GetType() $sysMgmtAssemblyName = &quot;System.Management&quot; $sysMgmtAssembly = [System.Reflection.Assembly]::LoadWithPartialName($sysMgmtAssemblyName) $objHostSettingType = $sysMgmtAssembly.GetType(&quot;System.Management.ManagementObject&quot;) [Reflection.MethodInfo] $methodInfo = $objHostSettingType.GetMethod(&quot;Put&quot;, $targetTypes) $methodInfo.Invoke($objHostSetting, $putOptions) write-SucessMessage &quot;Host $hostName created&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;$hostName host could not be created: $_.Exception.ToString()&quot; &#125;&#125;function Update-Bts-Host ( [string]$hostName, [int]$hostType, [string]$ntGroupName, [bool]$authTrusted, [bool]$tracking, [bool]$32BitOnly)&#123; try &#123; [System.Management.ManagementObject]$objHostSetting = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_HostSetting&quot;).CreateInstance() $objHostSetting[&quot;Name&quot;] = $hostName $objHostSetting[&quot;HostType&quot;] = $hostType $objHostSetting[&quot;NTGroupName&quot;] = $ntGroupName $objHostSetting[&quot;AuthTrusted&quot;] = $authTrusted $objHostSetting[&quot;IsHost32BitOnly&quot;] = $32BitOnly $objHostSetting[&quot;HostTracking&quot;] = $tracking $putOptions = new-Object System.Management.PutOptions $putOptions.Type = [System.Management.PutType]::UpdateOnly; # This tells WMI it&apos;s an update. [Type[]] $targetTypes = New-Object System.Type[] 1 $targetTypes[0] = $putOptions.GetType() $sysMgmtAssemblyName = &quot;System.Management&quot; $sysMgmtAssembly = [System.Reflection.Assembly]::LoadWithPartialName($sysMgmtAssemblyName) $objHostSettingType = $sysMgmtAssembly.GetType(&quot;System.Management.ManagementObject&quot;) [Reflection.MethodInfo] $methodInfo = $objHostSettingType.GetMethod(&quot;Put&quot;, $targetTypes) $methodInfo.Invoke($objHostSetting, $putOptions) write-SucessMessage &quot;Host updated&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;$hostName host could not be updated: $_.Exception.ToString()&quot; &#125;&#125;# function to create BizTalk send adapter handlerfunction Create-Bts-SendHandler([string]$adapter, [string]$hostName)&#123; try &#123; [System.Management.ManagementObject]$objSendHandler = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_SendHandler2&quot;).CreateInstance() $objSendHandler[&quot;AdapterName&quot;] = $adapter $objSendHandler[&quot;HostName&quot;] = $hostName $objSendHandler[&quot;IsDefault&quot;] = $false $putOptions = new-Object System.Management.PutOptions $putOptions.Type = [System.Management.PutType]::CreateOnly; [Type[]] $targetTypes = New-Object System.Type[] 1 $targetTypes[0] = $putOptions.GetType() $sysMgmtAssemblyName = &quot;System.Management&quot; $sysMgmtAssembly = [System.Reflection.Assembly]::LoadWithPartialName($sysMgmtAssemblyName) $objSendHandlerType = $sysMgmtAssembly.GetType(&quot;System.Management.ManagementObject&quot;) [Reflection.MethodInfo] $methodInfo = $objSendHandlerType.GetMethod(&quot;Put&quot;, $targetTypes) $methodInfo.Invoke($objSendHandler, $putOptions) write-SucessMessage &quot;Send handler created for $adapter / $hostName&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;Send handler for $adapter / $hostName could not be created: $_.Exception.ToString()&quot; &#125;&#125;# function to create BizTalk receive adapter handlerfunction Create-Bts-ReceiveHandler([string]$adapter, [string]$hostName)&#123; try &#123; [System.Management.ManagementObject]$objReceiveHandler = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_ReceiveHandler&quot;).CreateInstance() $objReceiveHandler[&quot;AdapterName&quot;] = $adapter $objReceiveHandler[&quot;HostName&quot;] = $hostName $putOptions = new-Object System.Management.PutOptions $putOptions.Type = [System.Management.PutType]::CreateOnly; [Type[]] $targetTypes = New-Object System.Type[] 1 $targetTypes[0] = $putOptions.GetType() $sysMgmtAssemblyName = &quot;System.Management&quot; $sysMgmtAssembly = [System.Reflection.Assembly]::LoadWithPartialName($sysMgmtAssemblyName) $objReceiveHandlerType = $sysMgmtAssembly.GetType(&quot;System.Management.ManagementObject&quot;) [Reflection.MethodInfo] $methodInfo = $objReceiveHandlerType.GetMethod(&quot;Put&quot;, $targetTypes) $methodInfo.Invoke($objReceiveHandler, $putOptions) write-SucessMessage &quot;Receive handler created for $adapter / $hostName&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;Receive handler for $adapter / $hostName could not be created: $_.Exception.ToString()&quot; &#125;&#125;# function to create BizTalk host instancefunction Create-Bts-Instance([string]$hostName, [string]$login, [string]$password, [string]$Server)&#123; try &#123; [System.Management.ManagementObject]$objServerHost = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_ServerHost&quot;).CreateInstance() $objServerHost[&quot;HostName&quot;] = $hostName $objServerHost[&quot;ServerName&quot;] = $Server $objServerHost.Map() [System.Management.ManagementObject]$objHostInstance = ([WmiClass]&quot;root/MicrosoftBizTalkServer:MSBTS_HostInstance&quot;).CreateInstance() $name = &quot;Microsoft BizTalk Server &quot; + $hostName + &quot; &quot; + $Server $objHostInstance[&quot;Name&quot;] = $name $objHostInstance.Install($Login, $Password, $True) write-SucessMessage &quot;Created host instance for $hostName on $Server&quot; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;$hostName host instance on server $Server could not be created: $_.Exception.ToString()&quot; &#125;&#125;function Start-Bts-HostInstance ( [string] $HostName, [string] $Server )&#123; try &#123; $filter = &quot;HostName = &apos;&quot; + $HostName + &quot;&apos; and RunningServer = &apos;&quot; + $Server + &quot;&apos;&quot; $HostInstance = get-wmiobject &quot;MSBTS_HostInstance&quot; -namespace &quot;root\MicrosoftBizTalkServer&quot; -filter $filter $HostInstanceState = $HostInstance.GetState().State write-InfoMessage &quot;Current state of $HostName instance on server $Server: $HostInstanceState (1=Stopped, 2=Start pending, 3=Stop pending, 4=Running, 8=Unknown)&quot; if ($HostInstanceState -eq 1) &#123; $HostInstance.Start() $HostInstanceState = $HostInstance.GetState().State write-SucessMessage &quot;New state of $HostName instance on server $Server: $HostInstanceState (1=Stopped, 2=Start pending, 3=Stop pending, 4=Running, 8=Unknown)&quot; &#125; else &#123; $HostInstanceState = $HostInstance.GetState().State write-WarnMessage &quot;Failed to start host instance $HostName on server $Server because host instance state $HostInstanceState was not the expected value of 1 (stopped)&quot; &#125; &#125; catch [System.Management.Automation.RuntimeException] &#123; write-Error &quot;$hostName host instance could not be started on $Server : $_.Exception.ToString()&quot; &#125;&#125;function Install-BTSMsi ( [string]$bts_application, [string]$msi_package, [string]$install_env ) &#123; write-InfoMessage &quot;Installing $msi_package in $bts_application for $install_env&quot; BTSTask ImportApp /ApplicationName:$bts_application /Package:$msi_package /Overwrite /Environment:$install_env if ($LASTEXITCODE -ne 0) &#123; write-ErrorMessage &quot;Failed to Import MSI $msi_package&quot; &#125; else &#123; write-SucessMessage &quot;Installed $bts_application for $install_env&quot; &#125;&#125;function Remove-BTSApplication ( [string]$appServer, [string]$appDatabase, [string]$appName ) &#123; write-InfoMessage &quot;Uninstalling Application: $appName &quot; BTSTask RemoveApp /Server:&quot;$appServer&quot; /ApplicationName:&quot;$appName&quot; /Database:&quot;$appDatabase&quot; #| out-null if ($LASTEXITCODE -ne 0) &#123; write-ErrorMessage &quot;Failed to remove $appServer $appName&quot; &#125; else &#123; write-SucessMessage &quot;Removed $appName from $appServer&quot; &#125;&#125; # Accesses SSO and will require the build user account to belong to the SSO Admins group. # Also requires Microsoft.BizTalk.ExplorerOM.dll to be loaded.function StartStop-BTSApplication ( [string]$appServer, [string]$appName, [string]$appCommand ) &#123; if ( ($appName -eq &apos;&apos;) -or ($appName -eq $null) ) &#123; throw &apos;you must supply the application name&apos; &#125; #write-InfoMessage &quot; Finding Application: $appServer:$appName &quot; $exp = New-Object Microsoft.BizTalk.ExplorerOM.BtsCatalogExplorer $exp.ConnectionString = Get-BTSConnectionString($appServer) $app = $exp.Applications[$appName] if($app -eq $null) &#123; if ($appCommand -eq &quot;stop&quot; ) &#123; write-WarnMessage &quot;WARNING failed to stop $appName&quot; &#125; else &#123; write-WarnMessage &quot;FAILED to start $appName&quot; &#125; &#125; else &#123; switch -wildcard ( $app.Status.ToString() ) &#123; &apos;Stopped&apos; &#123; if ($appCommand -eq &quot;start&quot; ) &#123; write-InfoMessage &quot;Starting Application: $appName &quot; $null = $app.Start([Microsoft.BizTalk.ExplorerOM.ApplicationStartOption]::StartAll) $null = $exp.SaveChanges() write-SucessMessage &quot; Started Application: $appName &quot; &#125; else &#123; write-InfoMessage &quot;Application Already Stopped: $appName &quot; &#125; &#125; &apos;*Started&apos; &#123; # includes Started and PartiallyStarted if ($appCommand -eq &quot;stop&quot; ) &#123; write-InfoMessage &quot;Stopping Application: $appName &quot; $null = $app.Stop([Microsoft.BizTalk.ExplorerOM.ApplicationStopOption]::StopAll) $null = $exp.SaveChanges() write-SucessMessage &quot; Stopped Application: $appName &quot; &#125; else &#123; write-InfoMessage &quot;Application Already Started : $appName &quot; &#125; &#125; &apos;NotApplicable&apos; &#123; write-InfoMessage &quot;Application doesn&apos;t require $appCommand&quot; &#125; default &#123; $msg = &quot;Unkown STATUS: &quot; + $app.Status write-ErrorMessage $msg &#125; &#125; &#125;&#125;function Get-BTSConnectionString ( [string] $server )&#123; $group = Get-WmiObject MSBTS_GroupSetting -n root\MicrosoftBizTalkServer -computername $server $grpdb = $group.MgmtDBName $grpsvr = $group.MgmtDBServerName [System.String]::Concat(&quot;server=&quot;, $grpsvr, &quot;;database=&quot;, $grpdb, &quot;;Integrated Security=SSPI&quot;) write-InfoMessage &quot; Server: $grpsvr - Database $grpdb&quot;&#125; Powershell 调用 .NET调用静态方法1[System.Diagnostics.Process]::GetProcesses() 列出所有静态方法1[System.Diagnostics.Process] | gm -Static 调用实例方法12$xmlDoc = new-object System.Xml.XmlDocument$xmlDoc.Load($file) 列出实例方法12$xmlDoc = new-object System.Xml.XmlDocument$xmlDoc | gm 加载 Assembly123456[System.Reflection.Assembly]::LoadFile($fileName)或者 使用下面方法，防止Assembly被Lock$bytes = [System.IO.File]::ReadAllBytes($storageAssemblyPath)[System.Reflection.Assembly]::Load($bytes) 查看当前PowerShell支持加载的.NET集合1[appdomain]::CurrentDomain.GetAssemblies()|%&#123;$_.fullname.split(&quot;,&quot;)[0]&#125; PowerShell 操作XML123$xml = [xml] (Get-Content &apos;.\file.xml&apos;)$node = $xml.SelectSingleNode(&apos;xpath&apos;)$node.myproperty = &apos;abc&apos; PowerShell 验证密码是否正确1234567Add-Type -AssemblyName System.DirectoryServices.AccountManagement $DS = New-Object System.DirectoryServices.AccountManagement.PrincipalContext([System.DirectoryServices.AccountManagement.ContextType]::Machine)$UserName = &apos;domain\username&apos;$Password = &apos;password&apos;$Result = $DS.ValidateCredentials($UserName, $Password) PowerShell 数据库操作获取表数据123456789101112131415function ExecuteSqlQuery ($conn, $sql) &#123; $Datatable = New-Object System.Data.DataTable $Connection = New-Object System.Data.SQLClient.SQLConnection $Connection.ConnectionString = $conn $Connection.Open() $Command = New-Object System.Data.SQLClient.SQLCommand $Command.Connection = $Connection $Command.CommandText = $sql $Reader = $Command.ExecuteReader() $Datatable.Load($Reader) $Connection.Close() return $Datatable&#125; 执行SQL语句123456789101112function ExecuteSqlNonQuery($conn, $sql)&#123; $Connection = New-Object System.Data.SQLClient.SQLConnection $Connection.ConnectionString = $conn $Connection.Open() $Command = New-Object System.Data.SQLClient.SQLCommand $Command.Connection = $Connection $Command.CommandText = $sql $Command.ExecuteNonQuery() | Out-Null $Connection.Close()&#125; PowerShell 模拟键盘输入使用SendWait函数，具体按键信息参考 https://msdn.microsoft.com/it-it/library/system.windows.forms.sendkeys(v=VS.100).aspx 12Add-Type -AssemblyName System.Windows.Forms[System.Windows.Forms.SendKeys]::SendWait(&quot;^&#123;a&#125;^&#123;c&#125;&quot;)]]></content>
  </entry>
  <entry>
    <title><![CDATA[python 使用小结]]></title>
    <url>%2Fnotes%2Fpython%2Findex.html</url>
    <content type="text"><![CDATA[python 常用脚本整理参考资料http://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[reactjs 使用小结]]></title>
    <url>%2Fnotes%2Freactjs%2Findex.html</url>
    <content type="text"><![CDATA[ReactJS 使用小结入门ReactJS入门教程： http://www.ruanyifeng.com/blog/2015/03/react.htmlRedux入门教程：http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.htmlReact全家桶一步一步搭建： https://github.com/brickspert/blog/issues/1#command 实用教程 https://segmentfault.com/a/1190000003501752 比较了 jQuery 和 ReactJS]]></content>
  </entry>
  <entry>
    <title><![CDATA[sql 使用小结]]></title>
    <url>%2Fnotes%2Fsql%2Findex.html</url>
    <content type="text"><![CDATA[SQL常用语句SQL 去除重复记录12 SQL 复制表数据1234567-- 创建新表并且复制表数据INSERT INTO table2 SELECT * FROM table1;-- 复制表数据到已有表中去INSERT INTO table2 (column1, column2) SELECT column1, column2FROM table1;]]></content>
  </entry>
  <entry>
    <title><![CDATA[sublime 使用小结]]></title>
    <url>%2Fnotes%2Fsublime%2Findex.html</url>
    <content type="text"><![CDATA[Sublime 折叠代码快捷键Ctrl+K, Ctrl+1 或者 Ctrl+K,Ctrl+2， 折叠文件内的函数，1,2表示级别]]></content>
  </entry>
  <entry>
    <title><![CDATA[ubuntu 使用小结]]></title>
    <url>%2Fnotes%2Fubuntu%2Findex.html</url>
    <content type="text"><![CDATA[Ubuntu Linux 常用命令解压12sudo apt install unzipunzip xxx.zip -d /usr/bin/local 添加可执行程序的link1sudo ln -s /usr/local/packer packer]]></content>
  </entry>
  <entry>
    <title><![CDATA[vba 使用小结]]></title>
    <url>%2Fnotes%2Fvba%2Findex.html</url>
    <content type="text"><![CDATA[VBA 使用小结调出宏窗口Alt+F11 修改Module Name填加一个Module之后，默认的名字是Module1，按F4调出Properties界面可以改名 执行延时命令123# 延时10秒Application.Wait (Now + #12:00:10 AM#) Application.Wait (Now + TimeValue(&quot;0:00:01&quot;)) 获取Sheet12Sheets(1)ActiveSheet 获取当前已经使用最大行数1ActiveSheet.UsedRange.Rows.Count 获取单元格信息123ActiveSheet.Range(&quot;B1&quot;).ValueSheets(1).Range(&quot;A1&quot;).ValueActiveCell.Text 添加注释1234Worksheets(1).Range(&quot;E5&quot;).AddComment &quot;Current Sales&quot;循环语句 For index = First_Row To Max_Row Next index Excel当前文件12345678910111213141516171819MsgBox (ActiveWorkbook.Path &amp; &quot;\&quot; &amp; ActiveWorkbook.Name)自动启动脚本，以及循环执行TimeoutPublic Sub EventMacro() &apos;... Execute your actions here&apos; alertTime = Now + TimeValue(&quot;00:00:01&quot;) ActiveSheet.Range(&quot;A1&quot;).Value = ActiveSheet.Range(&quot;A1&quot;).Value + 1 ActiveSheet.Range(&quot;B4&quot;).Value = ActiveSheet.Range(&quot;B4&quot;).Value + 1 If ActiveSheet.Range(&quot;B4&quot;).Value &gt; 25 Then ActiveSheet.Range(&quot;B4&quot;).Value = 1 End If &apos; Application.OnTime alertTime, &quot;ThisWorkbook.EventMacro&quot;End SubPrivate Sub Workbook_Open() ThisWorkbook.EventMacroEnd Sub]]></content>
  </entry>
  <entry>
    <title><![CDATA[vscode 使用小结]]></title>
    <url>%2Fnotes%2Fvscode%2Findex.html</url>
    <content type="text"><![CDATA[VSCODE 使用整理VSCode 设置自动格式化代码的快捷键1&#123; &quot;key&quot;: &quot;ctrl+k ctrl+d&quot;, &quot;command&quot;: &quot;editor.action.formatDocument&quot; &#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[vue 使用小结]]></title>
    <url>%2Fnotes%2Fvue%2Findex.html</url>
    <content type="text"><![CDATA[Vue.js 2.0Vue 循环12345678910111213141516171819&lt;div id="app"&gt; &lt;ol&gt; &lt;li v-for="site in sites"&gt; &#123;&#123; site.name &#125;&#125; &lt;/li&gt; &lt;/ol&gt;&lt;/div&gt;&lt;script&gt;new Vue(&#123; el: '#app', data: &#123; sites: [ &#123; name: 'Runoob' &#125;, &#123; name: 'Google' &#125;, &#123; name: 'Taobao' &#125; ] &#125;&#125;)&lt;/script&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[wechat 使用小结]]></title>
    <url>%2Fnotes%2Fwechat%2Findex.html</url>
    <content type="text"><![CDATA[WeChat 微信使用整理微信关闭窗口123setTimeout(function () &#123; WeixinJSBridge.call(&apos;closeWindow&apos;);&#125;, 1000); 可直接调用封装好的 方法12## 微信前台常用变量 http://www.weiquiz.com/demo.php/mobile/api/dump123456需提前开启 WECHAT_DEBUG_OPENID## 接入有问题1.可查看url和token是否正确 2.查看服务器端口是否为80端口 3.你可以通过记录log日志来判断是否接受到微信提交过来的信息 $fp=fopen(“log.txt”,”w+”);$strText=’http://‘.$_SERVER[‘HTTP_HOST’].$_SERVER[‘REQUEST_URI’].”\r\n”;fwrite($fp,$strText);1234567891011ThinkPHP会自动记录日志，可以去RunTime Log目录查看 复制log中的地址到浏览器查看是否已经有echostr并与参数中的echostr进行对比4.如果上述都正确可以能文件编码问题当文件编码为utf8 bom时文件前会自动添加3个字符 把文件去掉bom 正确---问题描述:用微信官方提供的demo验证token是成功的,但是放到自己网站的框架上进行token验证老是提示&quot;token验证失败&quot;.解决方案:最终在 echo $_GET[‘echostr’];前添加了一句代码ob_clean();12345678910111213141516把问题搞定.问题分析:因为用的是框架,在echo $_GET[&apos;echostr&apos;];之前可能有一些你不知道的输出到&quot;输出缓冲区&quot;,这样就影响微信获取你echo的内容了.---问题：redirect_uri 参数错误我们可以根据微信的开发者文档http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html 网页授权获取用户验证这一章来排除错误原因。如果确定appid等参数值没有出错，那么很大可能就是你的微信公众号后台的网页授权网址没有填写或者填写的不正确。 注意网址不要填写 ```http://``` 微信的redirect_uri参数错误原因分析微信网页授权网址范例： www.weiquiz.com 不可以缩写域名，要带上www或者二级域名---问题：微信会员没有头像 如果是切换了微信公众号的APP，可能Cache导致头像不能获取 解决：到服务器上清除Runtime目录，防止缓存## 禁用微信下拉黑边 var overscroll = function(el) {el.addEventListener(‘touchstart’, function() { var top = el.scrollTop, totalScroll = el.scrollHeight, currentScroll = top + el.offsetHeight; if(top === 0) { el.scrollTop = 1; } else if(currentScroll === totalScroll) { el.scrollTop = top - 1; }});el.addEventListener(‘touchmove’, function(evt) { if(el.offsetHeight &lt; el.scrollHeight) evt._isScroller = true; });}overscroll(document.querySelector(‘.rule-box’));document.body.addEventListener(‘touchmove’, function(evt) { if(!evt._isScroller) { evt.preventDefault(); }});12345678910111213141516171819202122232425## 微信表单验证https://github.com/progrape/weui.js/wiki/form$(&apos;form&apos;).valid()## 微信地图相关百度地图坐标获取：http://api.map.baidu.com/lbsapi/getpoint/index.html百度地图坐标输入：http://developer.baidu.com/map/jsdemo.htm#i8_4百度地图坐标转换：地图矫正：待尝试http://www.oschina.net/question/864741_91192?fromerr=XGo1hka4地图转换API，应该是From 3 to 5 不是1 to 51：原始GPS坐标3：Google坐标5：百度坐标http://lbsyun.baidu.com/index.php?title=webapi/guide/changeposition 地图KEY `方法：测算百度几个重要点的偏差，然后加入这个偏差量 百度地图API的事件处理：覆盖物的如何阻止冒泡 - 优秀毕业生 - 博客园http://www.cnblogs.com/well1010/p/3509453.html 技术点： 输入百度地图坐标，显示到地图上精确点 输入一个点，找到最近路上的点 解决方案 开发一个界面，用于增加和删除百度地图的点，用作基准点 增加一张表，用于转换 国标地图点-&gt;百度地图点-&gt;根据基准点调整之后的点 微信红包相关如果提示“证书出错,请登录微信支付商户平台下载证书”，而之前又是有用的，那么重新导入p12证书到系统的证书《个人》和《根》证书里 导入p12证书到本地 卡券签名错误http://snmoney.blog.163.com/blog/static/4400582016111251153566/]]></content>
  </entry>
</search>
